{"version":3,"sources":["components/user-components/farms/FarmProfile.module.css","components/admin-components/dashboard/PieChart.js","components/admin-components/dashboard/TotalCard.js","components/images/navLogo.png","components/layout/admin-layout/AdminNavigation.js","components/layout/admin-layout/AdminLayout.js","pages/admin-pages/Dashboard.js","service/api.js","components/admin-components/profile/EditProfileForm.js","components/admin-components/profile/EditProfileButton.js","components/admin-components/profile/ProfileCard.js","pages/admin-pages/Profile.js","components/ui/ItemCard.js","components/ui/ItemList.js","components/ui/AddItemForm.js","components/ui/AddItemButton.js","pages/admin-pages/Trees.js","pages/admin-pages/Vegetables.js","components/layout/user-layout/UserNavigation.js","components/layout/user-layout/UserLayout.js","components/user-components/farms/FarmCard.js","components/user-components/farms/FarmList.js","pages/user-pages/Home.js","components/user-components/trees/TreeCard.js","components/user-components/vegetables/VegetableCard.js","components/user-components/farms/FarmProducts.js","components/user-components/farms/FarmProfile.js","pages/user-pages/Farm.js","components/images/loginLogo.png","components/Login.js","components/Signup.js","pages/RegistrationForm.js","components/ui/UserItemsList.js","pages/user-pages/Orders.js","pages/user-pages/Adoptions.js","components/protected-routes/ProtectedCustomerRoute.js","components/protected-routes/ProtectedFarmerRoute.js","App.js","index.js","components/ui/AddItemForm.module.css","components/admin-components/profile/EditProfileForm.module.css","components/layout/admin-layout/AdminNavigation.module.css","components/layout/user-layout/UserNavigation.module.css"],"names":["module","exports","PieChart","props","chartData","data","chartTitle","title","console","log","Grid","item","xs","Card","elevation","width","height","chartType","loader","options","rootProps","TotalCard","sx","paddingTop","CardContent","Typography","fontSize","color","gutterBottom","variant","component","total","mb","subtitle","body","AdminNavigation","userName","localStorage","getItem","Navbar","collapseOnSelect","expand","className","Container","Brand","href","classes","NavBrand","src","navLogo","alt","style","maxHeight","Toggle","Collapse","id","Nav","to","navList","NavDropdown","Item","as","Link","textAlign","Divider","Button","fullWidth","size","AdminLayout","container","children","treesNumbersData","treesEarningsData","VegetablesNumbersData","VegetablesEarningsData","treesChartData","vegetablesChartData","Dashboard","spacing","md","BASE_URL","token","headers","api","checkLogin","loginData","axios","post","checkSignup","signupData","getFarmerVegetables","get","getFarmerTrees","getFarmerProfile","editFarmerProfile","editProfileData","addVegetable","addItemData","deleteVegetable","deleteItemData","addTree","deleteTree","getCustomerFarms","getCustomerTrees","treeData","getCustomerVegetables","vegetableData","adoptTree","treeAdoptionData","getCustomerAdoptions","orderVegetable","vegetableOrderData","getCustomerOrders","EditProfileForm","farmNameInputRef","useRef","farmLocationInputRef","farmPicInputRef","farmDescriptionInputRef","formContainer","form","onSubmit","event","preventDefault","farm_name","current","value","location","image","description","Accept","then","response","status","submitAction","action","catch","error","errors","alert","formTitle","closeAction","IconButton","onClick","position","top","right","padding","control","htmlFor","type","required","placeholder","ref","rows","actions","left","transform","maxWidth","bgcolor","borderRadius","boxShadow","p","EditProfileButton","React","open","setOpen","handleClose","Modal","onClose","Box","editAction","ProfileCard","CardMedia","CardHeader","subheader","owner","paddingRight","CardActions","getFunction","Profile","useState","fetchedProfileData","setFetchedProfileData","fetchedProfileOwner","setFetchedProfileOwner","profileData","owner_name","useEffect","ItemCard","sm","lg","name","price","Avatar","quantity","parseInt","deleteAction","ItemList","items","map","itemType","AddItemForm","itemNameInputRef","itemQuantityInputRef","itemPriceInputRef","itemDescriptionInputRef","itemPicInputRef","vegetableApi","itemData","isVegetable","addAction","nameLabel","namePlaceHolder","quantityLabel","quantityPlaceHolder","priceLabel","pricePlaceHolder","pictureLabel","descriptionLabel","descriptionPlaceHolder","buttonLabel","AddItemButton","bottom","Trees","history","useHistory","fetchedTrees","setFetchedTrees","allTrees","push","Vegetables","fetchedVegetables","setFetchedVegetables","allVegetables","formData","UserNavigation","UserLayout","FarmCard","CardActionArea","farmId","generatePath","FarmList","farms","farm","first_name","last_name","Home","fetchedFarms","setFetchedFarms","TreeCard","disableRipple","tree_id","VegetableCard","vegetable_id","TabPanel","index","other","role","hidden","a11yProps","FarmProducts","theme","useTheme","setValue","owner_id","AppBar","Tabs","onChange","newValue","textColor","Tab","label","axis","direction","onChangeIndex","dir","tree","vegetable","FarmProfile","profileCard","Farm","useParams","farmData","Login","emailInputRef","passwordInputRef","Paper","align","loginLogo","marginTop","enteredEmail","enteredPassword","email","password","fullName","user","user_type_id","setItem","access_token","TextField","paddingBottom","inputRef","backgroundColor","margin","Signup","firstNameInputRef","lastNameInputRef","enteredFirstName","enteredLastName","FormControl","FormLabel","RadioGroup","display","defaultValue","target","FormControlLabel","Radio","RegistrationForm","indicatorColor","UserItemsList","flexDirection","flex","Orders","fetchedOrders","setFetchedOrders","Adoptions","fetchedAdoptions","setFetchedAdoptions","ProtectedFarmerRoute","Component","restOfProps","userType","render","ProtectedCustomerRoute","App","path","exact","ReactDOM","basename","document","getElementById"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,YAAc,mC,uKCyBjBC,MArBf,SAAkBC,GACd,IAAIC,EAAYD,EAAME,KAAKD,UACrBE,EAAa,CAACC,MAAOJ,EAAME,KAAKE,OAExC,OADEC,QAAQC,IAAIL,GAEZ,cAACM,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CAAMC,UAAW,EAAjB,SACE,cAAC,IAAD,CACEC,MAAO,QACPC,OAAQ,QACRC,UAAU,WACVC,OAAQ,gDACRb,KAAMD,EACNe,QAASb,EACTc,UAAW,CAAE,cAAe,Y,SCYvBC,MArBf,SAAmBlB,GACjB,OACE,cAACO,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CAAMS,GAAI,CAAEC,WAAY,GAAKT,UAAW,EAAxC,SACE,eAACU,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYH,GAAI,CAAEI,SAAU,IAAMC,MAAM,eAAeC,cAAY,EAAnE,SACGzB,EAAME,KAAKE,QAEd,cAACkB,EAAA,EAAD,CAAYI,QAAQ,KAAKC,UAAU,MAAMR,GAAI,CAAEK,MAAO,WAAtD,SACGxB,EAAME,KAAK0B,QAEd,cAACN,EAAA,EAAD,CAAYH,GAAI,CAAEU,GAAI,KAAOL,MAAM,iBAAnC,SACGxB,EAAME,KAAK4B,WAEd,cAACR,EAAA,EAAD,CAAYI,QAAQ,QAApB,SAA6B1B,EAAME,KAAK6B,e,8DCxBnC,MAA0B,oCCkD1BC,MA5Cf,WACE,IAAIC,EAAWC,aAAaC,QAAQ,aAGpC,OACE,cAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACX,QAAQ,OAAOY,OAAO,KAAKC,UAAU,SAA9D,SACE,eAACC,EAAA,EAAD,WACE,cAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,GAAGH,UAAWI,IAAQC,SAAzC,SACE,qBAAKC,IAAKC,EAASC,IAAI,OAAOC,MANpB,CAAEC,UAAW,YASzB,cAACb,EAAA,EAAOc,OAAR,CAAe,gBAAc,0BAC7B,eAACd,EAAA,EAAOe,SAAR,CAAiBC,GAAG,wBAApB,UACE,eAACC,EAAA,EAAD,CAAKd,UAAU,UAAf,UACE,cAAC,IAAD,CAAMe,GAAG,aAAaf,UAAWI,IAAQY,QAAzC,uBAGA,cAAC,IAAD,CAAMD,GAAG,cAAcf,UAAWI,IAAQY,QAA1C,wBAGA,cAAC,IAAD,CAAMD,GAAG,SAASf,UAAWI,IAAQY,QAArC,sBAIF,eAACC,EAAA,EAAD,CAAapD,MAAO6B,EAAUmB,GAAG,qBAAjC,UACE,cAACI,EAAA,EAAYC,KAAb,CACEC,GAAIC,IACJL,GAAG,WACHN,MAAO,CAAEY,UAAW,UAHtB,0BAOA,cAACJ,EAAA,EAAYK,QAAb,IACA,cAACL,EAAA,EAAYC,KAAb,CAAkBf,KAAK,cAAvB,SACE,cAACoB,EAAA,EAAD,CAAQtC,MAAM,QAAQuC,WAAW,EAAMC,KAAK,QAA5C,kCCzBCC,MAXf,SAAqBjE,GACnB,OACE,0BAASuC,UAAU,iBAAnB,UACE,cAAC,EAAD,IACA,cAAChC,EAAA,EAAD,CAAM2D,WAAS,EAAf,SACE,cAAC1B,EAAA,EAAD,UAAYxC,EAAMmE,iBCJpBC,EAAmB,CACvBhE,MAAO,QACPwB,MAAO,MACPE,SAAU,QACVC,KAAM,iCAEFsC,EAAoB,CACxBjE,MAAO,QACPwB,MAAO,MACPE,SAAU,MACVC,KAAM,mCAEFuC,EAAwB,CAC5BlE,MAAO,QACPwB,MAAO,KACPE,SAAU,QACVC,KAAM,iCAEFwC,EAAyB,CAC7BnE,MAAO,QACPwB,MAAO,MACPE,SAAU,MACVC,KAAM,mCAGFyC,EAAiB,CACrBvE,UAAW,CACT,CAAC,QAAS,aACV,CAAC,QAAS,IACV,CAAC,QAAS,IACV,CAAC,SAAU,IACX,CAAC,QAAS,KAEZG,MAAO,sBAGHqE,EAAsB,CAC1BxE,UAAW,CACT,CAAC,aAAc,SACf,CAAC,SAAU,IACX,CAAC,WAAY,IACb,CAAC,SAAU,IACX,CAAC,QAAS,IAEZG,MAAO,2BA6BMsE,MA1Bf,WACE,OACE,cAAC,EAAD,UACE,eAACnE,EAAA,EAAD,CAAM2D,WAAS,EAACS,QAAS,EAAzB,UACE,eAACpE,EAAA,EAAD,CAAMC,MAAI,EAAC0D,WAAS,EAACzD,GAAI,GAAImE,GAAI,EAAGD,QAAS,EAA7C,UACE,cAACpE,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACa,EAAA,EAAD,CAAYI,QAAQ,KAApB,gCAEF,cAAC,EAAD,CAAWxB,KAAMkE,IACjB,cAAC,EAAD,CAAWlE,KAAMmE,IACjB,cAAC,EAAD,CAAUnE,KAAMsE,OAGlB,eAACjE,EAAA,EAAD,CAAMC,MAAI,EAAC0D,WAAS,EAACzD,GAAI,GAAImE,GAAI,EAAGD,QAAS,EAA7C,UACE,cAACpE,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACa,EAAA,EAAD,CAAYI,QAAQ,KAApB,qCAEF,cAAC,EAAD,CAAWxB,KAAMoE,IACjB,cAAC,EAAD,CAAWpE,KAAMqE,IACjB,cAAC,EAAD,CAAUrE,KAAMuE,a,iHCrEpBI,EAAW,uBAIXC,EAAQ,CACVC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChB,cAAiB,UANV7C,aAAaC,QAAQ,kBAiErB6C,EAvDH,CAERC,WAAY,SAACC,GAAD,OACZC,IAAMC,KAAN,UAAcP,EAAd,UAAgCK,IAEhCG,YAAa,SAACC,GAAD,OACbH,IAAMC,KAAN,UAAcP,EAAd,aAAmCS,IAGnCC,oBAAqB,kBACrBJ,IAAMK,IAAN,UAAaX,EAAb,mBAAwCC,IAExCW,eAAgB,kBAChBN,IAAMK,IAAN,UAAaX,EAAb,cAAmCC,IAEnCY,iBAAkB,kBAClBP,IAAMK,IAAN,UAAaX,EAAb,YAAiCC,IAEjCa,kBAAmB,SAACC,GAAD,OACnBT,IAAMC,KAAN,UAAcP,EAAd,iBAAuCe,EAAiBd,IAExDe,aAAc,SAACC,GAAD,OACdX,IAAMC,KAAN,UAAcP,EAAd,mBAAyCiB,EAAahB,IAEtDiB,gBAAiB,SAACC,GAAD,OACjBb,IAAMC,KAAN,UAAcP,EAAd,qBAA2CmB,EAAgBlB,IAE3DmB,QAAS,SAACH,GAAD,OACTX,IAAMC,KAAN,UAAcP,EAAd,cAAoCiB,EAAahB,IAEjDoB,WAAY,SAACF,GAAD,OACZb,IAAMC,KAAN,UAAcP,EAAd,gBAAsCmB,EAAgBlB,IAGtDqB,iBAAkB,kBAClBhB,IAAMK,IAAN,UAAaX,EAAb,mBAAwCC,IAExCsB,iBAAkB,SAACC,GAAD,OAClBlB,IAAMC,KAAN,UAAcP,EAAd,mBAAyCwB,EAAUvB,IAEnDwB,sBAAuB,SAACC,GAAD,OACvBpB,IAAMC,KAAN,UAAcP,EAAd,wBAA8C0B,EAAezB,IAE7D0B,UAAW,SAACC,GAAD,OACXtB,IAAMC,KAAN,UAAcP,EAAd,qBAA2C4B,EAAkB3B,IAE7D4B,qBAAsB,kBACtBvB,IAAMK,IAAN,UAAaX,EAAb,uBAA4CC,IAE5C6B,eAAgB,SAACC,GAAD,OAChBzB,IAAMC,KAAN,UAAcP,EAAd,0BAAgD+B,EAAoB9B,IAEpE+B,kBAAmB,kBACnB1B,IAAMK,IAAN,UAAaX,EAAb,oBAAyCC,KCgD9BgC,MA5Gf,SAAyB9G,GACvB,IAAM+G,EAAmBC,mBACnBC,EAAuBD,mBACvBE,EAAkBF,mBAClBG,EAA0BH,mBAoChC,OACE,qBAAKzE,UAAWI,IAAQyE,cAAxB,SACE,uBAAM7E,UAAWI,IAAQ0E,KAAMC,SApCnC,SAA4BC,GAC1BA,EAAMC,iBAEN,IAKM5B,EAAkB,CACtB6B,UANsBV,EAAiBW,QAAQC,MAO/CC,SAN0BX,EAAqBS,QAAQC,MAOvDE,MANqBX,EAAgBQ,QAAQC,MAO7CG,YAN6BX,EAAwBO,QAAQC,OAS/D3C,EACGW,kBAAkBC,EAAiB,CAClCb,QAAS,CACPgD,OAAQ,mBACR,eAAgB,sBAGnBC,MAAK,SAACC,GACDA,EAAS/H,KAAKgI,SAChBlI,EAAMmI,eACNnI,EAAMoI,aAGTC,OAAM,SAACC,GACNjI,QAAQC,IAAIgI,EAAML,SAAS/H,KAAKqI,QAChCC,MAAM,oBAMR,UACE,qBAAKjG,UAAWI,IAAQ8F,UAAxB,SACE,gDAEF,qBAAKlG,UAAWI,IAAQ+F,YAAxB,SACE,cAACC,EAAA,EAAD,CACEC,QAAS5I,EAAMoI,OACf,aAAW,QACXjH,GAAI,CACF0H,SAAU,WACVC,IAAK,OACLC,MAAO,OACPC,QAAS,OAEXxH,MAAM,QACNwC,KAAK,QAVP,SAYE,cAAC,IAAD,CACEzC,SAAS,QACTJ,GAAI,CAAEP,MAAO,OAAQC,OAAQ,cAInC,sBAAK0B,UAAWI,IAAQsG,QAAxB,UACE,uBAAOC,QAAQ,OAAf,uBAGA,uBACEC,KAAK,OACLC,UAAQ,EACRhG,GAAG,OACHiG,YAAY,kBACZC,IAAKvC,OAGT,sBAAKxE,UAAWI,IAAQsG,QAAxB,UACE,uBAAOC,QAAQ,WAAf,2BACA,uBACEC,KAAK,OACLC,UAAQ,EACRhG,GAAG,WACHiG,YAAY,sBACZC,IAAKrC,OAGT,sBAAK1E,UAAWI,IAAQsG,QAAxB,UACE,uBAAOC,QAAQ,UAAf,0BACA,uBAAOC,KAAK,OAAOC,UAAQ,EAAChG,GAAG,UAAUkG,IAAKpC,OAEhD,sBAAK3E,UAAWI,IAAQsG,QAAxB,UACE,uBAAOC,QAAQ,cAAf,yBACA,0BACE9F,GAAG,cACHgG,UAAQ,EACRG,KAAK,IACLF,YAAY,yBACZC,IAAKnC,OAGT,qBAAK5E,UAAWI,IAAQ6G,QAAxB,SACE,wBAAQL,KAAK,SAAb,kCCvGJnG,EAAQ,CACZ6F,SAAU,WACVC,IAAK,MACLW,KAAM,MACNC,UAAW,wBACX9I,MAAO,MACP+I,SAAU,QACVC,QAAS,mBACTC,aAAc,MACdC,UAAW,GACXC,EAAG,GAoCUC,MAjCf,SAA2BhK,GACzB,MAAwBiK,YAAe,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAc,kBAAMD,GAAQ,IAElC,OACE,gCACE,cAACrG,EAAA,EAAD,CACE,aAAW,MACXtC,MAAM,UACNwC,KAAK,QACL4E,QATa,kBAAMuB,GAAQ,IAK7B,kBASA,cAACE,EAAA,EAAD,CACEH,KAAMA,EACNI,QAASF,EACT,kBAAgB,oBAChB,mBAAiB,0BAJnB,SAME,cAACG,EAAA,EAAD,CAAKpJ,GAAI6B,EAAT,SACE,cAAC,EAAD,CACEoF,OAAQgC,EACRjC,aAAcnI,EAAMwK,qBCFjBC,MAhCf,SAAqBzK,GACnB,OACE,cAACO,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,eAACC,EAAA,EAAD,CAAMC,UAAW,EAAjB,UACE,cAAC+J,EAAA,EAAD,CACE/I,UAAU,MACVd,OAAO,MACPgH,MAAO7H,EAAM6H,MACb9E,IAAK/C,EAAMyH,YAEb,cAACkD,EAAA,EAAD,CACEvK,MAAOJ,EAAMyH,UACbmD,UAAW5K,EAAM6K,MACjBzC,OACE,cAAC9G,EAAA,EAAD,CAAY0B,MAAO,CAAE5B,WAAY,OAAQ0J,aAAc,QAAvD,SACG9K,EAAM4H,aAIb,cAACvG,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYI,QAAQ,QAAQF,MAAM,iBAAlC,SACGxB,EAAM8H,gBAGX,cAACiD,EAAA,EAAD,UACE,cAAC,EAAD,CAAmBP,WAAYxK,EAAMgL,sBCMhCC,OApCf,WACE,MAAoDC,mBAAS,IAA7D,mBAAOC,EAAP,KAA2BC,EAA3B,KACA,EAAsDF,mBAAS,IAA/D,mBAAOG,EAAP,KAA4BC,EAA5B,KAEMC,EAAc,WAClBvG,EACGU,mBACAsC,MAAK,SAACC,GACLmD,EAAsBnD,EAAS/H,KAAK,IACpCoL,EAAuBrD,EAAS/H,KAAKsL,eAGtCnD,OAAM,SAACC,GACNjI,QAAQC,IAAIgI,OAOlB,OAJAmD,qBAAU,WACRF,MACC,IAGD,cAAC,EAAD,UACE,cAAC,EAAD,CACEzD,YACEqD,EAAqBA,EAAmBrD,YAAc,cAExDL,UAAW0D,EAAqBA,EAAmB1D,UAAY,YAC/DI,MAAOsD,EAAqBA,EAAmBtD,MAAQ,QACvDD,SAAUuD,EAAqBA,EAAmBvD,SAAW,WAC7DiD,MAAOQ,EACPL,YAAaO,O,UCiDNG,OA1Ef,SAAkB1L,GAmChB,OACE,cAACO,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIkL,GAAI,EAAGC,GAAI,EAA9B,SACE,eAAClL,EAAA,EAAD,CAAMC,UAAW,EAAjB,UACE,cAAC+J,EAAA,EAAD,CACE/I,UAAU,MACVd,OAAO,MACPgH,MAAO7H,EAAM6H,MACb9E,IAAK/C,EAAM6L,OAEb,cAAClB,EAAA,EAAD,CACEvK,MAAOJ,EAAM6L,KACbjB,UAAW,IAAM5K,EAAM8L,MACvB1D,OACE,cAAC2D,GAAA,EAAD,CAAQ5K,GAAI,CAAEyI,QAAS,WAAa,aAAW,SAA/C,SACE,cAACtI,EAAA,EAAD,UAAatB,EAAMgM,eAIzB,cAAC3K,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYI,QAAQ,QAAQF,MAAM,iBAAlC,SACGxB,EAAM8H,gBAGX,cAACiD,EAAA,EAAD,UACE,cAACjH,EAAA,EAAD,CACEE,KAAK,SACLxC,MAAM,QACNuC,WAAW,EACXrC,QAAQ,YACRkH,QA/DV,WACE,IACM5C,EAAiB,CACrB5C,GAFa6I,SAASjM,EAAMoD,KAIX,MAAfpD,EAAMmJ,KACRnE,EACGe,gBAAgBC,EAAgB,CAC/BjB,QAAS,CACPgD,OAAQ,mBACR,eAAgB,sBAGnBC,MAAK,SAACC,GACDA,EAAS/H,KAAKgI,QAChBlI,EAAMkM,kBAIZlH,EACGkB,WAAWF,EAAgB,CAC1BjB,QAAS,CACPgD,OAAQ,mBACR,eAAgB,sBAGnBC,MAAK,SAACC,GACDA,EAAS/H,KAAKgI,QAChBlI,EAAMkM,mBA8BR,4BC9CKC,OApBf,SAAkBnM,GAChB,OACE,cAACO,EAAA,EAAD,CAAM2D,WAAS,EAACS,QAAS,EAAzB,SACG3E,EAAMoM,MAAMC,KAAI,SAAC7L,GAAD,OACf,cAAC,GAAD,CAEE4C,GAAI5C,EAAK4C,GACTyE,MAAOrH,EAAKqH,MACZC,YAAatH,EAAKsH,YAClBgE,MAAOtL,EAAKsL,MACZE,SAAUxL,EAAKwL,SACfH,KAAMrL,EAAKqL,KACX1C,KAAMnJ,EAAMsM,SACZJ,aAAclM,EAAMgL,aARfxK,EAAK4C,U,yCC6ILmJ,OA9If,SAAqBvM,GACnB,IAAMwM,EAAmBxF,mBACnByF,EAAuBzF,mBACvB0F,EAAoB1F,mBACpB2F,EAA0B3F,mBAC1B4F,EAAkB5F,mBAClB6F,EAAe7M,EAAM8M,SAASC,YAyDpC,OACE,qBAAKxK,UAAWI,KAAQyE,cAAxB,SACE,uBAAM7E,UAAWI,KAAQ0E,KAAMC,SAzDnC,SAAwBC,GACtBA,EAAMC,iBAEN,IAMM1B,EAAc,CAClB+F,KAPsBW,EAAiB9E,QAAQC,MAQ/CqE,SAP0BS,EAAqB/E,QAAQC,MAQvDmE,MAPuBY,EAAkBhF,QAAQC,MAQjDG,YAP6B6E,EAAwBjF,QAAQC,MAQ7DE,MAPqB+E,EAAgBlF,QAAQC,OAU1B,MAAjBkF,EACF7H,EACGa,aAAaC,EAAa,CACzBf,QAAS,CACPgD,OAAQ,mBACR,eAAgB,sBAGnBC,MAAK,SAACC,GACDA,EAAS/H,KAAKgI,SAChBlI,EAAMgN,YACNhN,EAAM0I,kBAGTL,OAAM,SAACC,GACNjI,QAAQC,IAAIgI,EAAML,SAAS/H,KAAKqI,QAChCC,MAAM,mBAGVxD,EACGiB,QAAQH,EAAa,CACpBf,QAAS,CACPgD,OAAQ,mBACR,eAAgB,sBAGnBC,MAAK,SAACC,GACDA,EAAS/H,KAAKgI,SAChBlI,EAAMgN,YACNhN,EAAM0I,kBAGTL,OAAM,SAACC,GACNjI,QAAQC,IAAIgI,EAAML,SAAS/H,KAAKqI,QAChCC,MAAM,oBAMV,UACE,qBAAKjG,UAAWI,KAAQ8F,UAAxB,SACE,6BAAKzI,EAAM8M,SAAS1M,UAEtB,qBAAKmC,UAAWI,KAAQ+F,YAAxB,SACE,cAACC,EAAA,EAAD,CACEC,QAAS5I,EAAM0I,YACf,aAAW,QACXvH,GAAI,CACF0H,SAAU,WACVC,IAAK,OACLC,MAAO,OACPC,QAAS,OAEXxH,MAAM,QACNwC,KAAK,QAVP,SAYE,cAAC,IAAD,CACEzC,SAAS,QACTJ,GAAI,CAAEP,MAAO,OAAQC,OAAQ,cAKnC,sBAAK0B,UAAWI,KAAQsG,QAAxB,UACE,uBAAOC,QAAQ,OAAf,SAAuBlJ,EAAM8M,SAASG,YAGtC,uBACE5D,YAAarJ,EAAM8M,SAASI,gBAC5B/D,KAAK,OACLC,UAAQ,EACRhG,GAAG,OACHkG,IAAKkD,OAGT,sBAAKjK,UAAWI,KAAQsG,QAAxB,UACE,uBAAOC,QAAQ,WAAf,SAA2BlJ,EAAM8M,SAASK,gBAC1C,uBACE9D,YAAarJ,EAAM8M,SAASM,oBAC5BjE,KAAK,WACLC,UAAQ,EACRhG,GAAG,WACHkG,IAAKmD,OAGT,sBAAKlK,UAAWI,KAAQsG,QAAxB,UACE,uBAAOC,QAAQ,QAAf,SAAwBlJ,EAAM8M,SAASO,aACvC,uBACEhE,YAAarJ,EAAM8M,SAASQ,iBAC5BnE,KAAK,SACLC,UAAQ,EACRhG,GAAG,QACHkG,IAAKoD,OAGT,sBAAKnK,UAAWI,KAAQsG,QAAxB,UACE,uBAAOC,QAAQ,UAAf,SAA0BlJ,EAAM8M,SAASS,eACzC,uBAAOpE,KAAK,OAAOC,UAAQ,EAAChG,GAAG,UAAUkG,IAAKsD,OAEhD,sBAAKrK,UAAWI,KAAQsG,QAAxB,UACE,uBAAOC,QAAQ,cAAf,SAA8BlJ,EAAM8M,SAASU,mBAC7C,0BACEnE,YAAarJ,EAAM8M,SAASW,uBAC5BrK,GAAG,cACHgG,UAAQ,EACRG,KAAK,IACLD,IAAKqD,OAGT,qBAAKpK,UAAWI,KAAQ6G,QAAxB,SACE,wBAAQL,KAAK,SAAb,SAAuBnJ,EAAM8M,SAASY,sBCxI1C1K,GAAQ,CACZ6F,SAAU,WACVC,IAAK,MACLW,KAAM,MACNC,UAAW,wBACX9I,MAAO,MACP+I,SAAU,QACVC,QAAS,mBACTC,aAAc,MACdC,UAAW,GACXC,EAAG,GAwCU4D,OArCf,SAAuB3N,GACrB,MAAwBiK,YAAe,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAc,kBAAMD,GAAQ,IAElC,OACE,gCACE,cAACxB,EAAA,EAAD,CACExH,GAAI,CACFK,MAAO,UACPqH,SAAU,QACV+E,OAAQ,MACR7E,MAAO,OAET,aAAW,MACXvH,MAAM,UACNwC,KAAK,QACL4E,QAfa,kBAAMuB,GAAQ,IAK7B,SAYE,cAAC,KAAD,CACEhJ,GAAI,CAAEP,MAAO,QAASC,OAAQ,SAC9BU,SAAS,YAGb,cAAC8I,EAAA,EAAD,CACEH,KAAMA,EACNI,QAASF,EACT,kBAAgB,oBAChB,mBAAiB,0BAJnB,SAME,cAACG,EAAA,EAAD,CAAKpJ,GAAI6B,GAAT,SACE,cAAC,GAAD,CAAa8J,SAAU9M,EAAME,KAAMwI,YAAa0B,EAAa4C,UAAWhN,EAAMgL,sBCDzE6C,OA1Cf,WACE,IAAMC,EAAUC,cAChB,EAAwC7C,mBAAS,IAAjD,mBAAO8C,EAAP,KAAqBC,EAArB,KAEMC,EAAW,WACflJ,EACGS,iBACAuC,MAAK,SAACC,GACLgG,EAAgBhG,EAAS/H,SAE1BmI,OAAM,SAACC,GACNjI,QAAQC,IAAIgI,GACZwF,EAAQK,KAAK,SAsBnB,OAlBA1C,qBAAU,WACRyC,MACC,CAACJ,IAiBF,eAAC,EAAD,WACE,cAAC,GAAD,CAAU1B,MAAO4B,EAAchD,YAAakD,IAC5C,cAAC,GAAD,CAAehO,KAjBF,CACfE,MAAO,YACP6M,UAAW,YACXC,gBAAiB,mBACjBC,cAAe,qBACfC,oBAAqB,yBACrBC,WAAY,iBACZC,iBAAkB,wBAClBC,aAAc,eACdC,iBAAkB,cAClBC,uBAAwB,6BACxBC,YAAa,YAMoB1C,YAAakD,QCUnCE,OA/Cf,WACE,IAAMN,EAAUC,cAChB,EAAkD7C,mBAAS,IAA3D,mBAAOmD,EAAP,KAA0BC,EAA1B,KAEMC,EAAgB,WACpBvJ,EACGO,sBACAyC,MAAK,SAACC,GACLqG,EAAqBrG,EAAS/H,SAE/BmI,OAAM,SAACC,GACNjI,QAAQC,IAAIgI,GACZwF,EAAQK,KAAK,SAInB1C,qBAAU,WACR8C,MACC,CAACT,IAEJ,IAAMU,EAAW,CACfpO,MAAO,iBACP6M,UAAW,iBACXC,gBAAiB,wBACjBC,cAAe,aACfC,oBAAqB,kCACrBC,WAAY,eACZC,iBAAkB,uBAClBC,aAAc,oBACdC,iBAAkB,cAClBC,uBAAwB,6BACxBC,YAAa,gBACbX,YAAa,KAGf,OACE,eAAC,EAAD,WACE,cAAC,GAAD,CACEX,MAAOiC,EACP/B,SAAUkC,EAASzB,YACnB/B,YAAauD,IAEf,cAAC,GAAD,CAAerO,KAAMsO,EAAUxD,YAAauD,Q,6BCPnCE,OApCf,WACE,IAAIxM,EAAWC,aAAaC,QAAQ,aAGpC,OACE,cAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACX,QAAQ,OAAOY,OAAO,KAAKC,UAAU,SAA9D,SACE,eAACC,EAAA,EAAD,WACE,cAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,GAAGH,UAAWI,KAAQC,SAAzC,SACA,qBAAKC,IAAKC,EAASC,IAAI,OAAOC,MANlB,CAAEC,UAAW,YAQzB,cAACb,EAAA,EAAOc,OAAR,CAAe,gBAAc,0BAC7B,eAACd,EAAA,EAAOe,SAAR,CAAiBC,GAAG,wBAApB,UACE,eAACC,EAAA,EAAD,CAAKd,UAAU,UAAf,UACE,cAAC,IAAD,CAAMe,GAAG,QAAQf,UAAWI,KAAQY,QAApC,kBAGA,cAAC,IAAD,CAAMD,GAAG,aAAaf,UAAWI,KAAQY,QAAzC,uBAGA,cAAC,IAAD,CAAMD,GAAG,UAAUf,UAAWI,KAAQY,QAAtC,uBAIF,cAACC,EAAA,EAAD,CAAapD,MAAO6B,EAAUmB,GAAG,qBAAjC,SACE,cAACI,EAAA,EAAYC,KAAb,CAAkBf,KAAK,cAAvB,SACE,cAACoB,EAAA,EAAD,CAAQtC,MAAM,QAAQuC,WAAW,EAAMC,KAAK,QAA5C,iCCjBC0K,OAXf,SAAoB1O,GAClB,OACE,oCACE,cAAC,GAAD,IACA,cAACO,EAAA,EAAD,CAAM2D,WAAS,EAAClB,MAAO,CAACgG,QAAS,OAAjC,SACE,cAACxG,EAAA,EAAD,UAAYxC,EAAMmE,iB,UC4BXwK,OAzBf,SAAkB3O,GAChB,IAAM8N,EAAUC,cAMhB,OACE,cAACxN,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIkL,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAClL,EAAA,EAAD,CAAMC,UAAW,EAAjB,SACE,eAACiO,GAAA,EAAD,CAA+BhG,QARrC,WACE,IAAMiG,EAAO7O,EAAMoD,GAEnB0K,EAAQK,KAAKW,YAAa,gBAAgB,CAACD,aAKvC,UACE,cAACnE,EAAA,EAAD,CAAW/I,UAAU,MAAMkG,MAAO7H,EAAM6H,MAAO9E,IAAK/C,EAAMyH,YAC1D,cAACkD,EAAA,EAAD,CACEvK,MAAOJ,EAAMyH,UACbmD,UAAW5K,EAAM6K,MACjBzC,OACE,cAAC9G,EAAA,EAAD,CAAY0B,MAAO,CAAE5B,WAAY,QAAjC,4BANepB,EAAMoD,SCApB2L,OAlBf,SAAkB/O,GAChB,OACE,cAACO,EAAA,EAAD,CAAM2D,WAAS,EAACS,QAAS,EAAzB,SACG3E,EAAMgP,MAAM3C,KAAI,SAAC4C,GAAD,OACf,cAAC,GAAD,CAEE7L,GAAI6L,EAAK7L,GACTyE,MAAOoH,EAAKpH,MACZC,YAAamH,EAAKnH,YAClBL,UAAWwH,EAAKxH,UAChBG,SAAUqH,EAAKrH,SACfiD,MAAOoE,EAAKC,WAAa,IAAMD,EAAKE,WAN/BF,EAAK7L,UCwBLgM,OA1Bf,WACE,MAAwClE,mBAAS,IAAjD,mBAAOmE,EAAP,KAAqBC,EAArB,KACMxB,EAAUC,cAiBhB,OAJAtC,qBAAU,WAVRzG,EACGmB,mBACA6B,MAAK,SAACC,GACLqH,EAAgBrH,EAAS/H,SAE1BmI,OAAM,SAACC,GACNwF,EAAQK,KAAK,UAMhB,CAACL,IAGF,cAAC,GAAD,UACE,cAAC,GAAD,CAAUkB,MAAOK,O,sFC+CRE,OAjEf,SAAkBvP,GAwBhB,OACE,cAACO,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIkL,GAAI,EAAGC,GAAI,EAA9B,SACE,eAAClL,EAAA,EAAD,CAAMC,UAAW,EAAjB,UACE,cAAC+J,EAAA,EAAD,CACE/I,UAAU,MACVd,OAAO,MACPgH,MAAO7H,EAAM6H,MACb9E,IAAK/C,EAAM6L,OAEb,cAAClB,EAAA,EAAD,CACEvK,MAAOJ,EAAM6L,KACbjB,UAAW,IAAM5K,EAAM8L,MACvB1D,OACE,cAAC2D,GAAA,EAAD,CAAQ5K,GAAI,CAAEyI,QAAS,WAAa,aAAW,SAA/C,SACE,cAACtI,EAAA,EAAD,UAAatB,EAAMgM,eAIzB,cAAC3K,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYI,QAAQ,QAAQF,MAAM,iBAAlC,SACGxB,EAAM8H,gBAGX,cAACiD,EAAA,EAAD,UACE,cAACjH,EAAA,EAAD,CACEtC,MAAM,UACNE,QAAQ,YACR8N,eAAe,EACfxL,KAAK,SACLD,WAAW,EACX5C,GAAI,CAAEyI,QAAS,WACfhB,QArDR,WACE,IAAMnC,EAAmB,CACvBgJ,QAASzP,EAAMoD,IAGjB4B,EACGwB,UAAUC,EAAkB,CAC3B1B,QAAS,CACPgD,OAAQ,mBACR,eAAgB,sBAGnBC,MAAK,SAACC,GACDA,EAAS/H,KAAKgI,QAChBM,MAAM,oCAGTH,OAAM,SAACC,GACNjI,QAAQC,IAAIgI,OA4BZ,gCCgBKoH,OAhEf,SAAuB1P,GAwBrB,OACE,cAACO,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIkL,GAAI,EAAGC,GAAI,EAA9B,SACE,eAAClL,EAAA,EAAD,CAAMC,UAAW,EAAjB,UACE,cAAC+J,EAAA,EAAD,CACE/I,UAAU,MACVd,OAAO,MACPgH,MAAO7H,EAAM6H,MACb9E,IAAK/C,EAAM6L,OAEb,cAAClB,EAAA,EAAD,CACEvK,MAAOJ,EAAM6L,KACbjB,UAAW,IAAM5K,EAAM8L,MACvB1D,OACE,cAAC2D,GAAA,EAAD,CAAQ5K,GAAI,CAAEyI,QAAS,WAAa,aAAW,SAA/C,SACE,cAACtI,EAAA,EAAD,UAAatB,EAAMgM,eAIzB,cAAC3K,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYI,QAAQ,QAAQF,MAAM,iBAAlC,SACGxB,EAAM8H,gBAGX,cAACiD,EAAA,EAAD,UACE,cAACjH,EAAA,EAAD,CACEtC,MAAM,UACNE,QAAQ,YACRsC,KAAK,SACLD,WAAW,EACX5C,GAAI,CAAEyI,QAAS,WACfhB,QApDV,WACE,IAAMhC,EAAqB,CACzB+I,aAAc3P,EAAMoD,IAGtB4B,EACG2B,eAAeC,EAAoB,CAClC7B,QAAS,CACPgD,OAAQ,mBACR,eAAgB,sBAGnBC,MAAK,SAACC,GACDA,EAAS/H,KAAKgI,QAChBM,MAAM,yCAGTH,OAAM,SAACC,GACNjI,QAAQC,IAAIgI,OA4BV,+B,gCCzCV,SAASsH,GAAS5P,GAChB,IAAQmE,EAAqCnE,EAArCmE,SAAUwD,EAA2B3H,EAA3B2H,MAAOkI,EAAoB7P,EAApB6P,MAAUC,EAAnC,aAA6C9P,EAA7C,IAEA,OACE,+CACE+P,KAAK,WACLC,OAAQrI,IAAUkI,EAClBzM,GAAE,8BAAyByM,GAC3B,2CAAmCA,IAC/BC,GALN,aAOGnI,IAAUkI,GACT,cAACtF,EAAA,EAAD,CAAKpJ,GAAI,CAAE4I,EAAG,GAAd,SACE,cAACzI,EAAA,EAAD,CAAYK,UAAW,MAAvB,SAA+BwC,SAazC,SAAS8L,GAAUJ,GACjB,MAAO,CACLzM,GAAG,kBAAD,OAAoByM,GACtB,gBAAgB,uBAAhB,OAAwCA,IA6H7BK,OAxHf,SAAsBlQ,GACpB,IAAMmQ,EAAQC,eACd,EAA0BnG,WAAe,GAAzC,mBAAOtC,EAAP,KAAc0I,EAAd,KAWA,EAAwCnF,mBAAS,IAAjD,mBAAO8C,EAAP,KAAqBC,EAArB,KACMH,EAAUC,cACV1H,EAAW,CACfiK,SAAUtQ,EAAM6O,QAmBlBpD,qBAAU,WAfRzG,EACGoB,iBAAiBC,EAAU,CAC1BtB,QAAS,CACPgD,OAAQ,mBACR,eAAgB,sBAGnBC,MAAK,SAACC,GACLgG,EAAgBhG,EAAS/H,SAE1BmI,OAAM,SAACC,GACNwF,EAAQK,KAAK,UAMhB,CAACL,IAGJ,MAAkD5C,mBAAS,IAA3D,mBAAOmD,EAAP,KAA0BC,EAA1B,KACM/H,EAAgB,CACpB+J,SAAUtQ,EAAM6O,QAuBlB,OAJApD,qBAAU,WAfRzG,EACGsB,sBAAsBC,EAAe,CACpCxB,QAAS,CACPgD,OAAQ,mBACR,eAAgB,sBAGnBC,MAAK,SAACC,GACLqG,EAAqBrG,EAAS/H,SAE/BmI,OAAM,SAACC,GACNwF,EAAQK,KAAK,UAMhB,CAACL,IAGF,eAACvD,EAAA,EAAD,CAAKpJ,GAAI,CAAEyI,QAAS,mBAAoBhJ,MAAO,QAA/C,UACE,cAAC2P,GAAA,EAAD,CAAQ1H,SAAS,SAAjB,SACE,eAAC2H,GAAA,EAAD,CACE7I,MAAOA,EACP8I,SAlEa,SAAClJ,EAAOmJ,GAC3BL,EAASK,IAkEHC,UAAU,UACVjP,QAAQ,YACR,aAAW,iBALb,UAOE,cAACkP,GAAA,EAAD,cAAKC,MAAM,eAAkBZ,GAAU,KACvC,cAACW,GAAA,EAAD,cAAKC,MAAM,mBAAsBZ,GAAU,UAI/C,eAAC,KAAD,CACEa,KAA0B,QAApBX,EAAMY,UAAsB,YAAc,IAChDlB,MAAOlI,EACPqJ,cA3EoB,SAACnB,GACzBQ,EAASR,IAuEP,UAKE,cAACD,GAAD,CAAUjI,MAAOA,EAAOkI,MAAO,EAAGoB,IAAKd,EAAMY,UAA7C,SACE,cAACxQ,EAAA,EAAD,CAAM2D,WAAS,EAACS,QAAS,EAAzB,SACGqJ,EAAa3B,KAAI,SAAC6E,GAAD,OAChB,cAAC,GAAD,CAEE9N,GAAI8N,EAAK9N,GACTyE,MAAOqJ,EAAKrJ,MACZC,YAAaoJ,EAAKpJ,YAClBgE,MAAOoF,EAAKpF,MACZE,SAAUkF,EAAKlF,SACfH,KAAMqF,EAAKrF,MANNqF,EAAK9N,WAWlB,cAACwM,GAAD,CAAUjI,MAAOA,EAAOkI,MAAO,EAAGoB,IAAKd,EAAMY,UAA7C,SACE,cAACxQ,EAAA,EAAD,CAAM2D,WAAS,EAACS,QAAS,EAAzB,SACG0J,EAAkBhC,KAAI,SAAC8E,GAAD,OACrB,cAAC,GAAD,CAEE/N,GAAI+N,EAAU/N,GACdyE,MAAOsJ,EAAUtJ,MACjBC,YAAaqJ,EAAUrJ,YACvBgE,MAAOqF,EAAUrF,MACjBE,SAAUmF,EAAUnF,SACpBH,KAAMsF,EAAUtF,MANXsF,EAAU/N,kB,qBCrHhBgO,OA3Bf,SAAqBpR,GACnB,OACE,cAACO,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,eAACC,EAAA,EAAD,CAAM6B,UAAWI,KAAQ0O,YAAzB,UACE,cAAC3G,EAAA,EAAD,CACE/I,UAAU,MACVd,OAAO,MACPgH,MAAO7H,EAAME,KAAK2H,MAClB9E,IAAK/C,EAAME,KAAKuH,YAElB,cAACkD,EAAA,EAAD,CACEvK,MAAO,cAACkB,EAAA,EAAD,CAAYI,QAAQ,KAApB,SAA0B1B,EAAME,KAAKuH,YAC5CmD,UAAW5K,EAAME,KAAKgP,WAAa,IAAMlP,EAAME,KAAKiP,UACpD/G,OACE,cAAC9G,EAAA,EAAD,CAAY0B,MAAO,CAAE5B,WAAY,QAAjC,0BAGJ,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYI,QAAQ,QAAQF,MAAM,iBAAlC,SACGxB,EAAME,KAAK4H,sBCqBTwJ,OA1Cf,WACE,MAAwCpG,mBAAS,IAAjD,mBAAOmE,EAAP,KAAqBC,EAArB,KACMxB,EAAUC,cAehBtC,qBAAU,WAXRzG,EACGmB,mBACA6B,MAAK,SAACC,GACLqH,EAAgBrH,EAAS/H,SAE1BmI,OAAM,SAACC,GACNjI,QAAQC,IAAIgI,GACZwF,EAAQK,KAAK,UAMhB,CAACL,IAGJ,IAtBc,EAsBRe,EAAW0C,cAAX1C,OACAzL,EAAK6I,SAAS4C,GAChB2C,EAAW,GAxBD,eA4BGnC,GA5BH,IA4Bd,2BAA+B,CAAC,IAAvBJ,EAAsB,QACzBA,EAAK7L,KAAOA,IACdoO,EAAWvC,IA9BD,8BAkCd,OACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAa/O,KAAMsR,IACnB,cAAC,GAAD,CAAc3C,OAAQzL,Q,oBC9Cb,OAA0B,sCC8G1BqO,OAvGf,WACE,IAAMC,EAAgB1K,mBAChB2K,EAAmB3K,mBACnB8G,EAAUC,cAsDhB,OACE,eAAC6D,GAAA,EAAD,CAAOjR,UAAW,GAAIqC,MATL,CACjBgG,QAAS,GACTnI,OAAQ,OACR8I,SAAU,KAMV,UACE,eAACpJ,EAAA,EAAD,CAAMsR,MAAM,SAAZ,UACE,qBAAKhP,IAAKiP,GAAW/O,IAAI,OAAOC,MANpB,CAAEC,UAAW,QAAS8O,UAAW,WAO7C,oBAAI/O,MANS,CAAExB,MAAO,WAMtB,mBACA,oBAAIwB,MAdU,CAAE+O,UAAW,GAAIvQ,MAAO,WActC,wBAEF,uBAAM8F,SA3DV,SAAsBC,GACpBA,EAAMC,iBACN,IAAMwK,EAAeN,EAAchK,QAAQC,MACrCsK,EAAkBN,EAAiBjK,QAAQC,MAC3CzC,EAAY,CAChBgN,MAAOF,EACPG,SAAUF,GAGZjN,EACGC,WAAWC,EAAW,CACrBH,QAAS,CACPgD,OAAQ,mBACR,eAAgB,sBAGnBC,MAAK,SAACC,GACL,IAEMmK,EAFQnK,EAAS/H,KAAKmS,KAAKnD,WAER,IADXjH,EAAS/H,KAAKmS,KAAKlD,UAGO,IAApClH,EAAS/H,KAAKmS,KAAKC,cACrBpQ,aAAaqQ,QAAQ,YAAaH,GAClClQ,aAAaqQ,QAAQ,eAAgBtK,EAAS/H,KAAKsS,cACnDtQ,aAAaqQ,QAAQ,YAAatK,EAAS/H,KAAKmS,KAAKC,cACrDxE,EAAQK,KAAK,cAEbjM,aAAaqQ,QAAQ,YAAaH,GAClClQ,aAAaqQ,QAAQ,eAAgBtK,EAAS/H,KAAKsS,cACnDtQ,aAAaqQ,QAAQ,YAAatK,EAAS/H,KAAKmS,KAAKC,cACrDxE,EAAQK,KAAK,aAGhB9F,OAAM,SAACC,GACNjI,QAAQC,IAAIgI,GACS,KAAjB0J,GAA2C,KAApBC,EACzBzJ,MAAM,iCAENA,MAAM,mCAqBV,UACE,cAACiK,GAAA,EAAD,CACEtR,GAAI,CAAEuR,cAAe,QACrB7B,MAAM,QACN1H,KAAK,QACLE,YAAY,sBACZsJ,SAAUjB,EACVhQ,QAAQ,WACRF,MAAM,UACNwC,KAAK,QACLD,WAAS,EACTqF,UAAQ,IAEV,cAACqJ,GAAA,EAAD,CACEtR,GAAI,CAAEuR,cAAe,QACrB7B,MAAM,WACN1H,KAAK,WACLE,YAAY,iBACZsJ,SAAUhB,EACVjQ,QAAQ,WACRF,MAAM,UACNwC,KAAK,QACLD,WAAS,EACTqF,UAAQ,IAEV,cAACtF,EAAA,EAAD,CACEtC,MAAM,UACNL,GAAI,CAAEyR,gBAAiB,UAAWC,OAAQ,YAC1CnR,QAAQ,YACRyH,KAAK,SACLpF,WAAS,EALX,4B,kDCmEO+O,OAxJf,WACE,IAAMC,EAAoB/L,mBACpBgM,EAAmBhM,mBACnB0K,EAAgB1K,mBAChB2K,EAAmB3K,mBA8CzB,EAA0BiD,WAAe,KAAzC,mBAAOtC,EAAP,KAAc0I,EAAd,KAIA,OACE,eAACuB,GAAA,EAAD,CAAOjR,UAAW,GAAIqC,MAZL,CACjBgG,QAAS,GACTW,SAAU,KAUV,UACE,eAACpJ,EAAA,EAAD,CAAMsR,MAAM,SAAZ,UACE,qBAAKhP,IAAKiP,GAAW/O,IAAI,OAAOC,MAVpB,CAAEC,UAAW,QAAS8O,UAAW,WAW7C,oBAAI/O,MAVS,CAAExB,MAAO,WAUtB,mBACA,oBAAIwB,MAjBU,CAAE+O,UAAW,GAAIvQ,MAAO,WAiBtC,wBAEF,uBAAM8F,SAvDV,SAAuBC,GACrBA,EAAMC,iBACN,IAAMyL,EAAmBF,EAAkBrL,QAAQC,MAC7CuL,EAAkBF,EAAiBtL,QAAQC,MAC3CqK,EAAeN,EAAchK,QAAQC,MACrCsK,EAAkBN,EAAiBjK,QAAQC,MAC3CrC,EAAa,CACjB4J,WAAY+D,EACZ9D,UAAW+D,EACXZ,aAAc3K,EACduK,MAAOF,EACPG,SAAUF,GAGZjN,EACGK,YAAYC,EAAY,CACvBP,QAAS,CACPgD,OAAQ,mBACR,eAAgB,sBAGnBC,MAAK,SAACC,GACDA,EAAS/H,KAAKgI,QAChBM,MAAM,sCAGTH,OAAM,SAACC,GACNjI,QAAQC,IAAIgI,GACS,KAAjB0J,GAA2C,KAApBC,EACzBzJ,MAAM,iCAENA,MAAM,4BAwBV,UACE,cAACiK,GAAA,EAAD,CACEtR,GAAI,CAAEuR,cAAe,QACrB7B,MAAM,aACN1H,KAAK,OACLE,YAAY,wBACZsJ,SAAUI,EACVrR,QAAQ,WACRF,MAAM,UACNwC,KAAK,QACLD,WAAS,EACTqF,UAAQ,IAEV,cAACqJ,GAAA,EAAD,CACEtR,GAAI,CAAEuR,cAAe,QACrB7B,MAAM,YACN1H,KAAK,OACLE,YAAY,uBACZsJ,SAAUK,EACVtR,QAAQ,WACRF,MAAM,UACNwC,KAAK,QACLD,WAAS,EACTqF,UAAQ,IAEV,eAAC+J,GAAA,EAAD,CAAaxR,UAAU,WAAvB,UACE,cAACyR,GAAA,EAAD,CACE5R,MAAM,UACNG,UAAU,SACVqB,MAAO,CAAE6P,OAAQ,OAHnB,0BAOA,eAACQ,GAAA,EAAD,CACErQ,MAAO,CAAEsQ,QAAS,WAClB,aAAW,YACXC,aAAa,WACb1H,KAAK,YACLlE,MAAOA,EACP8I,SAjDW,SAAClJ,GACpB8I,EAAS9I,EAAMiM,OAAO7L,QA0ChB,UAQE,cAAC8L,GAAA,EAAD,CACE9L,MAAM,IACNsB,QAAS,cAACyK,GAAA,EAAD,CAAOlS,MAAM,UAAUwC,KAAK,UACrC6M,MAAM,aAER,cAAC4C,GAAA,EAAD,CACE9L,MAAM,IACNsB,QAAS,cAACyK,GAAA,EAAD,CAAOlS,MAAM,UAAUwC,KAAK,UACrC6M,MAAM,iBAIZ,cAAC4B,GAAA,EAAD,CACEtR,GAAI,CAAEuR,cAAe,QACrB7B,MAAM,QACN1H,KAAK,QACLE,YAAY,mBACZsJ,SAAUjB,EACVhQ,QAAQ,WACRF,MAAM,UACNwC,KAAK,QACLD,WAAS,EACTqF,UAAQ,IAEV,cAACqJ,GAAA,EAAD,CACEtR,GAAI,CAAEuR,cAAe,QACrB7B,MAAM,WACN1H,KAAK,WACLE,YAAY,oBACZsJ,SAAUhB,EACVjQ,QAAQ,WACRF,MAAM,UACNwC,KAAK,QACLD,WAAS,EACTqF,UAAQ,IAEV,cAACtF,EAAA,EAAD,CACEtC,MAAM,UACNL,GAAI,CAAEyR,gBAAiB,UAAWC,OAAQ,YAC1CnR,QAAQ,YACRyH,KAAK,SACLpF,WAAS,EALX,4B,gCCzIR,SAAS6L,GAAS5P,GAChB,IAAQmE,EAAqCnE,EAArCmE,SAAUwD,EAA2B3H,EAA3B2H,MAAOkI,EAAoB7P,EAApB6P,MAAUC,EAAnC,aAA6C9P,EAA7C,IAEA,OACE,+CACE+P,KAAK,WACLC,OAAQrI,IAAUkI,EAClBzM,GAAE,8BAAyByM,GAC3B,2CAAmCA,IAC/BC,GALN,aAOGnI,IAAUkI,GACT,cAACtF,EAAA,EAAD,UACFpG,OAaN,SAAS8L,GAAUJ,GACjB,MAAO,CACLzM,GAAG,kBAAD,OAAoByM,GACtB,gBAAgB,uBAAhB,OAAwCA,IAkD7B8D,OA9Cf,WACE,IACMxD,EAAQC,eACd,EAA0BnG,IAAMiB,SAAS,GAAzC,mBAAOvD,EAAP,KAAc0I,EAAd,KAUA,OACE,cAACuB,GAAA,EAAD,CAAO5O,MAbU,CAAE2G,SAAU,IAAKkJ,OAAQ,YAahBlS,UAAW,EAArC,SACE,eAAC4J,EAAA,EAAD,CAAKpJ,GAAI,CAAEyI,QAAS,mBAAoBD,SAAU,KAAlD,UACE,cAAC4G,GAAA,EAAD,CAAQ1H,SAAS,SAAjB,SACE,eAAC2H,GAAA,EAAD,CACE7I,MAAOA,EACP8I,SAdW,SAAClJ,EAAOmJ,GAC3BL,EAASK,IAcDkD,eAAe,YACfjD,UAAU,UACVjP,QAAQ,YACR,aAAW,0BANb,UAQE,cAACkP,GAAA,EAAD,cAAKC,MAAM,WAAcZ,GAAU,KACnC,cAACW,GAAA,EAAD,cAAKC,MAAM,WAAcZ,GAAU,UAGvC,eAAC,KAAD,CACEa,KAA0B,QAApBX,EAAMY,UAAsB,YAAc,IAChDlB,MAAOlI,EACPqJ,cAvBkB,SAACnB,GACzBQ,EAASR,IAmBL,UAKE,cAAC,GAAD,CAAUlI,MAAOA,EAAOkI,MAAO,EAAGoB,IAAKd,EAAMY,UAA7C,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAUpJ,MAAOA,EAAOkI,MAAO,EAAGoB,IAAKd,EAAMY,UAA7C,SACE,cAAC,GAAD,eCpBG8C,OAvDf,SAAuB7T,GACrB,OACE,eAACO,EAAA,EAAD,CAAM2D,WAAS,EAAC/C,GAAI,CAAE4Q,UAAW,SAAjC,UACG/R,EAAMoM,MAAMC,KAAI,SAAC7L,GAAD,OACf,cAACD,EAAA,EAAD,CAAoBC,MAAI,EAACC,GAAI,GAA7B,SACE,eAACC,EAAA,EAAD,CAAMS,GAAI,CAAEmS,QAAS,QAAU3S,UAAW,EAA1C,UACE,cAAC+J,EAAA,EAAD,CACE/I,UAAU,MACVR,GAAI,CAAEP,MAAO,OACbiH,MAAOrH,EAAKqH,MACZ9E,IAAI,gCAEN,eAACwH,EAAA,EAAD,CACEpJ,GAAI,CAAEP,MAAO,MAAO0S,QAAS,OAAQQ,cAAe,UADtD,UAGE,cAACnJ,EAAA,EAAD,CACExJ,GAAI,CAAEyR,gBAAiB,WACvBxS,MAAOI,EAAKqL,KACZjB,UAAW,IAAMpK,EAAKsL,MACtB1D,OACE,cAAC2D,GAAA,EAAD,CACE5K,GAAI,CAAEyI,QAAS,UAAWmI,UAAW,OACrC,aAAW,SAFb,SAIE,cAACzQ,EAAA,EAAD,UAAad,EAAKwL,eAIxB,eAAC3K,EAAA,EAAD,CACEF,GAAI,CAAE4S,KAAM,WAAYnB,gBAAiB,WAD3C,UAGE,cAACtR,EAAA,EAAD,CACEK,UAAU,MACVqB,MAAO,CAAExB,MAAO,WAChBE,QAAQ,KAHV,SAKGlB,EAAKiH,YAER,cAACnG,EAAA,EAAD,CACEI,QAAQ,QACRF,MAAM,iBACNG,UAAU,MAHZ,SAKGnB,EAAKsH,wBAvCLtH,EAAK4C,OAFpB,QCwBW4Q,OA3Bf,WACE,MAA0C9I,mBAAS,IAAnD,mBAAO+I,EAAP,KAAsBC,EAAtB,KACMpG,EAAUC,cAkBhB,OAJAtC,qBAAU,WAXRzG,EACG6B,oBACAmB,MAAK,SAACC,GACLiM,EAAiBjM,EAAS/H,SAE3BmI,OAAM,SAACC,GACNjI,QAAQC,IAAIgI,GACZwF,EAAQK,KAAK,UAMhB,CAACL,IAGF,cAAC,GAAD,UACE,cAAC,GAAD,CAAe1B,MAAO6H,OCIbE,OA1Bf,WACE,MAAgDjJ,mBAAS,IAAzD,mBAAOkJ,EAAP,KAAyBC,EAAzB,KACMvG,EAAUC,cAiBhB,OAJAtC,qBAAU,WAVRzG,EACG0B,uBACAsB,MAAK,SAACC,GACLoM,EAAoBpM,EAAS/H,SAE9BmI,OAAM,SAACC,GACNwF,EAAQK,KAAK,UAMhB,CAACL,IAGF,cAAC,GAAD,UACE,cAAC,GAAD,CAAe1B,MAAOgI,O,iBCbbE,OAZf,YAAyE,IAA9BC,EAA6B,EAAxC5S,UAAyB6S,EAAe,mBAC9DC,EAAWvS,aAAaC,QAAQ,aACtC,OACI,cAAC,IAAD,6BACEqS,GADF,IAEFE,OAAQ,SAAC1U,GAAD,MACO,MAAbyU,EAAmB,cAACF,EAAD,gBAAevU,IAAY,cAAC,IAAD,CAAUsD,GAAG,W,iBCMpDqR,OAZf,YAA2E,IAA9BJ,EAA6B,EAAxC5S,UAAyB6S,EAAe,mBAChEC,EAAWvS,aAAaC,QAAQ,aACtC,OACI,cAAC,IAAD,6BACEqS,GADF,IAEFE,OAAQ,SAAC1U,GAAD,MACO,MAAbyU,EAAmB,cAACF,EAAD,gBAAevU,IAAY,cAAC,IAAD,CAAUsD,GAAG,WC0BpDsR,OArBf,WACE,OAEE,cADA,CACC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACnT,UAAWgS,KAEjC,cAAC,GAAD,CAAsBkB,KAAK,WAAWlT,UAAWsJ,KACjD,cAAC,GAAD,CAAsB4J,KAAK,aAAalT,UAAW+C,IACnD,cAAC,GAAD,CAAsBmQ,KAAK,cAAclT,UAAWyM,KACpD,cAAC,GAAD,CAAsByG,KAAK,SAASlT,UAAWkM,KAC/C,cAAC,GAAD,CAAwBgH,KAAK,QAAQlT,UAAWyN,KAChD,cAAC,GAAD,CAAwByF,KAAK,gBAAgBlT,UAAW2P,KAIxD,cAAC,GAAD,CAAwBuD,KAAK,UAAUlT,UAAWqS,KAClD,cAAC,GAAD,CAAwBa,KAAK,aAAalT,UAAWwS,SCxB3DY,IAASL,OACP,cAAC,IAAD,CAAeM,SAAS,SAAxB,SACE,cAAC,GAAD,MAEFC,SAASC,eAAe,U,mBCT1BrV,EAAOC,QAAU,CAAC,QAAU,6BAA6B,QAAU,6BAA6B,KAAO,0BAA0B,UAAY,+BAA+B,cAAgB,qC,mBCA5LD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,QAAU,iCAAiC,KAAO,8BAA8B,UAAY,mCAAmC,cAAgB,yC,mBCA5MD,EAAOC,QAAU,CAAC,WAAa,oCAAoC,QAAU,iCAAiC,OAAS,gCAAgC,SAAW,kCAAkC,YAAc,uC,mBCAlND,EAAOC,QAAU,CAAC,QAAU,gCAAgC,OAAS,+BAA+B,SAAW,oC","file":"static/js/main.5c954aa2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileCard\":\"FarmProfile_profileCard__tNcTI\"};","import { Card, Grid } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\n\r\nfunction PieChart(props) {\r\n    let chartData = props.data.chartData;\r\n    const chartTitle = {title: props.data.title};\r\n    console.log(chartData);\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Card elevation={7}>\r\n        <Chart\r\n          width={\"500px\"}\r\n          height={\"300px\"}\r\n          chartType=\"PieChart\"\r\n          loader={<div>Loading Chart</div>}\r\n          data={chartData}\r\n          options={chartTitle}\r\n          rootProps={{ \"data-testid\": \"1\" }}\r\n        />\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default PieChart;\r\n","import {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nfunction TotalCard(props) {\r\n  return (\r\n    <Grid item xs={6}>\r\n      <Card sx={{ paddingTop: 2 }} elevation={7}>\r\n        <CardContent>\r\n          <Typography sx={{ fontSize: 16 }} color=\"text.primary\" gutterBottom>\r\n            {props.data.title}\r\n          </Typography>\r\n          <Typography variant=\"h5\" component=\"div\" sx={{ color: \"#72B750\" }}>\r\n            {props.data.total}\r\n          </Typography>\r\n          <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n            {props.data.subtitle}\r\n          </Typography>\r\n          <Typography variant=\"body2\">{props.data.body}</Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default TotalCard;\r\n","export default __webpack_public_path__ + \"static/media/navLogo.1bf254b4.png\";","import { Button } from \"@mui/material\";\r\nimport { Container, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classes from \"./AdminNavigation.module.css\";\r\nimport navLogo from \"../../images/navLogo.png\";\r\n\r\nfunction AdminNavigation() {\r\n  let userName = localStorage.getItem(\"user_name\");\r\n  const logoStyle = { maxHeight: \"55px\" };\r\n\r\n  return (\r\n    <Navbar collapseOnSelect variant=\"dark\" expand=\"lg\" className=\"nav-bg\">\r\n      <Container>\r\n        <Navbar.Brand href=\"\" className={classes.NavBrand}>\r\n          <img src={navLogo} alt=\"logo\" style={logoStyle} />\r\n        </Navbar.Brand>\r\n\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <Link to=\"/dashboard\" className={classes.navList}>\r\n              Dashboard\r\n            </Link>\r\n            <Link to=\"/vegetables\" className={classes.navList}>\r\n              Vegetables\r\n            </Link>\r\n            <Link to=\"/trees\" className={classes.navList}>\r\n              Trees\r\n            </Link>\r\n          </Nav>\r\n          <NavDropdown title={userName} id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item\r\n              as={Link}\r\n              to=\"/profile\"\r\n              style={{ textAlign: \"center\" }}\r\n            >\r\n              Edit profile\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item href=\"#action/3.1\">\r\n              <Button color=\"error\" fullWidth={true} size=\"small\">\r\n                Logout\r\n              </Button>\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\nexport default AdminNavigation;\r\n","import { Grid } from \"@mui/material\";\r\nimport AdminNavigation from \"./AdminNavigation\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nfunction AdminLayout(props) {\r\n  return (\r\n    <section className=\"layout-section\">\r\n      <AdminNavigation />\r\n      <Grid container>\r\n        <Container>{props.children}</Container>\r\n      </Grid>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AdminLayout;\r\n// Using Grid to give a responsive margin layout\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport PieChart from \"../../components/admin-components/dashboard/PieChart\";\r\nimport TotalCard from \"../../components/admin-components/dashboard/TotalCard\";\r\nimport AdminLayout from \"../../components/layout/admin-layout/AdminLayout\";\r\n\r\nconst treesNumbersData = {\r\n  title: \"Total\",\r\n  total: \"198\",\r\n  subtitle: \"Trees\",\r\n  body: \"Total number of trees adopted\",\r\n};\r\nconst treesEarningsData = {\r\n  title: \"Total\",\r\n  total: \"500\",\r\n  subtitle: \"USD\",\r\n  body: \"Total earnings of trees adopted\",\r\n};\r\nconst VegetablesNumbersData = {\r\n  title: \"Total\",\r\n  total: \"95\",\r\n  subtitle: \"Boxes\",\r\n  body: \"Total number of boxes ordered\",\r\n};\r\nconst VegetablesEarningsData = {\r\n  title: \"Total\",\r\n  total: \"245\",\r\n  subtitle: \"USD\",\r\n  body: \"Total earnings of boxes ordered\",\r\n};\r\n\r\nconst treesChartData = {\r\n  chartData: [\r\n    [\"Trees\", \"Adoptions\"],\r\n    [\"Apple\", 23],\r\n    [\"Peach\", 15],\r\n    [\"Cherry\", 50],\r\n    [\"Olive\", 35],\r\n  ],\r\n  title: \"My trees adoptions\",\r\n};\r\n\r\nconst vegetablesChartData = {\r\n  chartData: [\r\n    [\"Vegetables\", \"Boxes\"],\r\n    [\"Tomato\", 25],\r\n    [\"Cucumber\", 45],\r\n    [\"Potato\", 13],\r\n    [\"Onion\", 7],\r\n  ],\r\n  title: \"My vegetables adoptions\",\r\n};\r\n\r\nfunction Dashboard() {\r\n  return (\r\n    <AdminLayout>\r\n      <Grid container spacing={3}>\r\n        <Grid item container xs={12} md={6} spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h5\">Trees Statistics</Typography>\r\n          </Grid>\r\n          <TotalCard data={treesNumbersData} />\r\n          <TotalCard data={treesEarningsData} />\r\n          <PieChart data={treesChartData} />\r\n        </Grid>\r\n\r\n        <Grid item container xs={12} md={6} spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h5\">Vegetables Statistics</Typography>\r\n          </Grid>\r\n          <TotalCard data={VegetablesNumbersData} />\r\n          <TotalCard data={VegetablesEarningsData} />\r\n          <PieChart data={vegetablesChartData} />\r\n        </Grid>\r\n      </Grid>\r\n    </AdminLayout>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://efarm.ml/api';\r\n\r\nconst cookie = localStorage.getItem('access_token'); // gets the token that is saved in the local storage\r\n\r\nconst token = {\r\n    headers: {\r\n        'Accept': 'application/json',\r\n        'Content-type': 'application/json',\r\n        'Authorization': 'Bearer ' + cookie\r\n    },\r\n}\r\n\r\nconst api = {\r\n\r\n    checkLogin: (loginData) =>\r\n    axios.post(`${BASE_URL}/login`, loginData),\r\n\r\n    checkSignup: (signupData) =>\r\n    axios.post(`${BASE_URL}/register`, signupData),\r\n\r\n    //Farmer APIs\r\n    getFarmerVegetables: () =>\r\n    axios.get(`${BASE_URL}/get_vegetables`, token),\r\n\r\n    getFarmerTrees: () =>\r\n    axios.get(`${BASE_URL}/get_trees`, token),\r\n\r\n    getFarmerProfile: () =>\r\n    axios.get(`${BASE_URL}/profile`, token),\r\n    \r\n    editFarmerProfile: (editProfileData) =>\r\n    axios.post(`${BASE_URL}/edit_profile`, editProfileData, token),\r\n    \r\n    addVegetable: (addItemData) =>\r\n    axios.post(`${BASE_URL}/add_vegetables`, addItemData, token),\r\n\r\n    deleteVegetable: (deleteItemData) =>\r\n    axios.post(`${BASE_URL}/delete_vegetable`, deleteItemData, token),\r\n\r\n    addTree: (addItemData) =>\r\n    axios.post(`${BASE_URL}/add_trees`, addItemData, token),\r\n\r\n    deleteTree: (deleteItemData) =>\r\n    axios.post(`${BASE_URL}/delete_tree`, deleteItemData, token),\r\n\r\n    //Customer APIs\r\n    getCustomerFarms: () =>\r\n    axios.get(`${BASE_URL}/user_get_farms`, token),\r\n\r\n    getCustomerTrees: (treeData) =>\r\n    axios.post(`${BASE_URL}/user_get_trees`, treeData, token),\r\n\r\n    getCustomerVegetables: (vegetableData) =>\r\n    axios.post(`${BASE_URL}/user_get_vegetables`, vegetableData, token),\r\n\r\n    adoptTree: (treeAdoptionData) =>\r\n    axios.post(`${BASE_URL}/user_adopt_trees`, treeAdoptionData, token),\r\n\r\n    getCustomerAdoptions: () =>\r\n    axios.get(`${BASE_URL}/user_get_adoptions`, token),\r\n\r\n    orderVegetable: (vegetableOrderData) =>\r\n    axios.post(`${BASE_URL}/user_order_vegetables`, vegetableOrderData, token),\r\n\r\n    getCustomerOrders: () =>\r\n    axios.get(`${BASE_URL}/user_get_orders`, token),\r\n}\r\nexport default api;","import * as React from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport classes from \"./EditProfileForm.module.css\";\r\nimport CancelRoundedIcon from \"@mui/icons-material/CancelRounded\";\r\nimport api from \"../../../service/api\";\r\n\r\nfunction EditProfileForm(props) {\r\n  const farmNameInputRef = useRef();\r\n  const farmLocationInputRef = useRef();\r\n  const farmPicInputRef = useRef();\r\n  const farmDescriptionInputRef = useRef();\r\n\r\n  function editProfileHandler(event) {\r\n    event.preventDefault();\r\n\r\n    const enteredFarmName = farmNameInputRef.current.value;\r\n    const enterefFarmLocation = farmLocationInputRef.current.value;\r\n    const enteredFarmPic = farmPicInputRef.current.value;\r\n    const enteredFarmDescription = farmDescriptionInputRef.current.value;\r\n\r\n    const editProfileData = {\r\n      farm_name: enteredFarmName,\r\n      location: enterefFarmLocation,\r\n      image: enteredFarmPic,\r\n      description: enteredFarmDescription,\r\n    };\r\n\r\n    api\r\n      .editFarmerProfile(editProfileData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.status) {\r\n          props.submitAction(); //profileData api call\r\n          props.action(); //closes the Modal\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data.errors);\r\n        alert(\"Invalid data\");\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className={classes.formContainer}>\r\n      <form className={classes.form} onSubmit={editProfileHandler}>\r\n        <div className={classes.formTitle}>\r\n          <h4>EDIT PROFILE</h4>\r\n        </div>\r\n        <div className={classes.closeAction}>\r\n          <IconButton\r\n            onClick={props.action}\r\n            aria-label=\"close\"\r\n            sx={{\r\n              position: \"absolute\",\r\n              top: \"1rem\",\r\n              right: \"1rem\",\r\n              padding: \"0px\",\r\n            }}\r\n            color=\"error\"\r\n            size=\"small\"\r\n          >\r\n            <CancelRoundedIcon\r\n              fontSize=\"small\"\r\n              sx={{ width: \"30px\", height: \"30px\" }}\r\n            />\r\n          </IconButton>\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"name\">Farm Name</label>\r\n          {/* htmlFor is the equival ent of for in regular html and it points to the id */}\r\n          {/* of the input target */}\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            id=\"name\"\r\n            placeholder=\"Enter farm name\"\r\n            ref={farmNameInputRef}\r\n          />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"location\">Farm Location</label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            id=\"location\"\r\n            placeholder=\"Enter farm location\"\r\n            ref={farmLocationInputRef}\r\n          />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"picture\">Farm Picture</label>\r\n          <input type=\"text\" required id=\"picture\" ref={farmPicInputRef} />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"description\">Description</label>\r\n          <textarea\r\n            id=\"description\"\r\n            required\r\n            rows=\"5\"\r\n            placeholder=\"Enter farm description\"\r\n            ref={farmDescriptionInputRef}\r\n          />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button type=\"submit\">EDIT PROFILE</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default EditProfileForm;\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { Button } from \"@mui/material\";\r\nimport EditProfileForm from \"./EditProfileForm\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: \"70%\",\r\n  maxWidth: \"800px\",\r\n  bgcolor: \"background.paper\",\r\n  borderRadius: \"5px\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nfunction EditProfileButton(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        aria-label=\"Add\"\r\n        color=\"success\"\r\n        size=\"large\"\r\n        onClick={handleOpen}\r\n      >\r\n        Edit\r\n      </Button>\r\n\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <EditProfileForm\r\n            action={handleClose}\r\n            submitAction={props.editAction}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditProfileButton;\r\n","import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Grid } from \"@mui/material\";\r\nimport EditProfileButton from \"./EditProfileButton\";\r\n\r\nfunction ProfileCard(props) {\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Card elevation={7}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"194\"\r\n          image={props.image}\r\n          alt={props.farm_name}\r\n        />\r\n        <CardHeader\r\n          title={props.farm_name}\r\n          subheader={props.owner}\r\n          action={\r\n            <Typography style={{ paddingTop: \"34px\", paddingRight: \"15px\" }}>\r\n              {props.location}\r\n            </Typography>\r\n          }\r\n        ></CardHeader>\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {props.description}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <EditProfileButton editAction={props.getFunction} />\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default ProfileCard;\r\n","import { useState, useEffect } from \"react\";\r\nimport ProfileCard from \"../../components/admin-components/profile/ProfileCard\";\r\nimport AdminLayout from \"../../components/layout/admin-layout/AdminLayout\";\r\nimport api from \"../../service/api\";\r\n\r\nfunction Profile() {\r\n  const [fetchedProfileData, setFetchedProfileData] = useState([]);\r\n  const [fetchedProfileOwner, setFetchedProfileOwner] = useState(\"\");\r\n\r\n  const profileData = () => {\r\n    api\r\n      .getFarmerProfile()\r\n      .then((response) => {\r\n        setFetchedProfileData(response.data[0]);\r\n        setFetchedProfileOwner(response.data.owner_name);\r\n      })\r\n      // The routes are already protected\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    profileData();\r\n  }, []);\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <ProfileCard\r\n        description={\r\n          fetchedProfileData ? fetchedProfileData.description : \"Description\"\r\n        }\r\n        farm_name={fetchedProfileData ? fetchedProfileData.farm_name : \"Farm name\"}\r\n        image={fetchedProfileData ? fetchedProfileData.image : \"Image\"}\r\n        location={fetchedProfileData ? fetchedProfileData.location : \"Location\"}\r\n        owner={fetchedProfileOwner}\r\n        getFunction={profileData}\r\n      />\r\n    </AdminLayout>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Avatar, Button, Grid } from \"@mui/material\";\r\nimport api from \"../../service/api\";\r\n\r\nfunction ItemCard(props) {\r\n  function deleteHandler() {\r\n    const itemId = parseInt(props.id);\r\n    const deleteItemData = {\r\n      id: itemId,\r\n    };\r\n    if (props.type === \"1\") {\r\n      api\r\n        .deleteVegetable(deleteItemData, {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"content-type\": \"application/json\",\r\n          },\r\n        })\r\n        .then((response) => {\r\n          if (response.data.status) {\r\n            props.deleteAction(); //get items api call\r\n          }\r\n        });\r\n    } else {\r\n      api\r\n        .deleteTree(deleteItemData, {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"content-type\": \"application/json\",\r\n          },\r\n        })\r\n        .then((response) => {\r\n          if (response.data.status) {\r\n            props.deleteAction();\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12} sm={6} lg={4}>\r\n      <Card elevation={7}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"194\"\r\n          image={props.image}\r\n          alt={props.name}\r\n        />\r\n        <CardHeader\r\n          title={props.name}\r\n          subheader={\"$\" + props.price}\r\n          action={\r\n            <Avatar sx={{ bgcolor: \"#F2AB50\" }} aria-label=\"recipe\">\r\n              <Typography>{props.quantity}</Typography>\r\n            </Avatar>\r\n          }\r\n        ></CardHeader>\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {props.description}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            size=\"medium\"\r\n            color=\"error\"\r\n            fullWidth={true}\r\n            variant=\"contained\"\r\n            onClick={deleteHandler}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default ItemCard;\r\n","import { Grid } from \"@mui/material\";\r\nimport ItemCard from \"./ItemCard\";\r\n\r\nfunction ItemList(props) {\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {props.items.map((item) => (\r\n        <ItemCard\r\n          key={item.id}\r\n          id={item.id}\r\n          image={item.image}\r\n          description={item.description}\r\n          price={item.price}\r\n          quantity={item.quantity}\r\n          name={item.name}\r\n          type={props.itemType}\r\n          deleteAction={props.getFunction}\r\n        />\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default ItemList;\r\n","import * as React from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport classes from \"./AddItemForm.module.css\";\r\nimport CancelRoundedIcon from \"@mui/icons-material/CancelRounded\";\r\nimport api from \"../../service/api\";\r\n\r\nfunction AddItemForm(props) {\r\n  const itemNameInputRef = useRef();\r\n  const itemQuantityInputRef = useRef();\r\n  const itemPriceInputRef = useRef();\r\n  const itemDescriptionInputRef = useRef();\r\n  const itemPicInputRef = useRef();\r\n  const vegetableApi = props.itemData.isVegetable; // if it's equal to one, request is coming from the Vegetables.js component\r\n\r\n  function addItemHandler(event) {\r\n    event.preventDefault();\r\n\r\n    const enteredItemName = itemNameInputRef.current.value;\r\n    const enteredItemQuantity = itemQuantityInputRef.current.value;\r\n    const enteredItemPrice = itemPriceInputRef.current.value;\r\n    const enteredItemDescription = itemDescriptionInputRef.current.value;\r\n    const enteredItemPic = itemPicInputRef.current.value;\r\n\r\n    const addItemData = {\r\n      name: enteredItemName,\r\n      quantity: enteredItemQuantity,\r\n      price: enteredItemPrice,\r\n      description: enteredItemDescription,\r\n      image: enteredItemPic,\r\n    };\r\n\r\n    if (vegetableApi === \"1\") {\r\n      api\r\n        .addVegetable(addItemData, {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"content-type\": \"application/json\",\r\n          },\r\n        })\r\n        .then((response) => {\r\n          if (response.data.status) {\r\n            props.addAction(); //allVegetables api call\r\n            props.closeAction(); //closes the Modal\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response.data.errors);\r\n          alert(\"Invalid data\");\r\n        });\r\n    } else {\r\n      api\r\n        .addTree(addItemData, {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"content-type\": \"application/json\",\r\n          },\r\n        })\r\n        .then((response) => {\r\n          if (response.data.status) {\r\n            props.addAction(); //allTrees api call\r\n            props.closeAction(); //closes the Modal\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response.data.errors);\r\n          alert(\"Invalid data\");\r\n        });\r\n    }\r\n  }\r\n  return (\r\n    <div className={classes.formContainer}>\r\n      <form className={classes.form} onSubmit={addItemHandler}>\r\n        <div className={classes.formTitle}>\r\n          <h4>{props.itemData.title}</h4>\r\n        </div>\r\n        <div className={classes.closeAction}>\r\n          <IconButton\r\n            onClick={props.closeAction}\r\n            aria-label=\"close\"\r\n            sx={{\r\n              position: \"absolute\",\r\n              top: \"1rem\",\r\n              right: \"1rem\",\r\n              padding: \"0px\",\r\n            }}\r\n            color=\"error\"\r\n            size=\"small\"\r\n          >\r\n            <CancelRoundedIcon\r\n              fontSize=\"small\"\r\n              sx={{ width: \"30px\", height: \"30px\" }}\r\n            />\r\n          </IconButton>\r\n        </div>\r\n\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"name\">{props.itemData.nameLabel}</label>\r\n          {/* htmlFor is the equival ent of for in regular html and it points to the id */}\r\n          {/* of the input target */}\r\n          <input\r\n            placeholder={props.itemData.namePlaceHolder}\r\n            type=\"text\"\r\n            required\r\n            id=\"name\"\r\n            ref={itemNameInputRef}\r\n          />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"quantity\">{props.itemData.quantityLabel}</label>\r\n          <input\r\n            placeholder={props.itemData.quantityPlaceHolder}\r\n            type=\"quantity\"\r\n            required\r\n            id=\"quantity\"\r\n            ref={itemQuantityInputRef}\r\n          />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"price\">{props.itemData.priceLabel}</label>\r\n          <input\r\n            placeholder={props.itemData.pricePlaceHolder}\r\n            type=\"number\"\r\n            required\r\n            id=\"price\"\r\n            ref={itemPriceInputRef}\r\n          />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"picture\">{props.itemData.pictureLabel}</label>\r\n          <input type=\"text\" required id=\"picture\" ref={itemPicInputRef} />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"description\">{props.itemData.descriptionLabel}</label>\r\n          <textarea\r\n            placeholder={props.itemData.descriptionPlaceHolder}\r\n            id=\"description\"\r\n            required\r\n            rows=\"5\"\r\n            ref={itemDescriptionInputRef}\r\n          />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button type=\"submit\">{props.itemData.buttonLabel}</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default AddItemForm;\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport AddCircleRoundedIcon from \"@mui/icons-material/AddCircleRounded\";\r\nimport AddItemForm from \"./AddItemForm\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: \"70%\",\r\n  maxWidth: \"800px\",\r\n  bgcolor: \"background.paper\",\r\n  borderRadius: \"5px\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nfunction AddItemButton(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        sx={{\r\n          color: \"#72B750\",\r\n          position: \"fixed\",\r\n          bottom: \"10%\",\r\n          right: \"10%\",\r\n        }}\r\n        aria-label=\"Add\"\r\n        color=\"success\"\r\n        size=\"large\"\r\n        onClick={handleOpen}\r\n      >\r\n        <AddCircleRoundedIcon\r\n          sx={{ width: \"2.2em\", height: \"2.2em\" }}\r\n          fontSize=\"large\"\r\n        />\r\n      </IconButton>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <AddItemForm itemData={props.data} closeAction={handleClose} addAction={props.getFunction} />\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default AddItemButton;\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AdminLayout from \"../../components/layout/admin-layout/AdminLayout\";\r\nimport ItemList from \"../../components/ui/ItemList\";\r\nimport AddItemButton from \"../../components/ui/AddItemButton\";\r\nimport api from \"../../service/api\";\r\n\r\nfunction Trees() {\r\n  const history = useHistory();\r\n  const [fetchedTrees, setFetchedTrees] = useState([]);\r\n\r\n  const allTrees = () => {\r\n    api\r\n      .getFarmerTrees()\r\n      .then((response) => {\r\n        setFetchedTrees(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        history.push(\"/\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    allTrees();\r\n  }, [history]);\r\n\r\n  const formData = {\r\n    title: \"ADD TREES\",\r\n    nameLabel: \"Tree Name\",\r\n    namePlaceHolder: \"Insert tree name\",\r\n    quantityLabel: \"Available Quantity\",\r\n    quantityPlaceHolder: \"Insert number of trees\",\r\n    priceLabel: \"Price per tree\",\r\n    pricePlaceHolder: \"Insert price per tree\",\r\n    pictureLabel: \"Tree Picture\",\r\n    descriptionLabel: \"Description\",\r\n    descriptionPlaceHolder: \"Insert a brief description\",\r\n    buttonLabel: \"ADD TREE\",\r\n  };\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <ItemList items={fetchedTrees} getFunction={allTrees} />\r\n      <AddItemButton data={formData} getFunction={allTrees} />\r\n    </AdminLayout>\r\n  );\r\n}\r\n\r\nexport default Trees;\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddItemButton from \"../../components/ui/AddItemButton\";\r\nimport ItemList from \"../../components/ui/ItemList\";\r\nimport AdminLayout from \"../../components/layout/admin-layout/AdminLayout\";\r\nimport api from \"../../service/api\";\r\n\r\nfunction Vegetables() {\r\n  const history = useHistory();\r\n  const [fetchedVegetables, setFetchedVegetables] = useState([]);\r\n\r\n  const allVegetables = () => {\r\n    api\r\n      .getFarmerVegetables()\r\n      .then((response) => {\r\n        setFetchedVegetables(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        history.push(\"/\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    allVegetables();\r\n  }, [history]);\r\n\r\n  const formData = {\r\n    title: \"ADD VEGETABLES\",\r\n    nameLabel: \"Vegetable Name\",\r\n    namePlaceHolder: \"Insert vegetable name\",\r\n    quantityLabel: \"Box Weight\",\r\n    quantityPlaceHolder: \"Insert vegetable weight per box\",\r\n    priceLabel: \"Price per Kg\",\r\n    pricePlaceHolder: \"Insert price per box\",\r\n    pictureLabel: \"Vegetable Picture\",\r\n    descriptionLabel: \"Description\",\r\n    descriptionPlaceHolder: \"Insert a brief description\",\r\n    buttonLabel: \"ADD VEGETABLE\",\r\n    isVegetable: \"1\", //to be used as a condition in the addItemForm.js\r\n  };\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <ItemList\r\n        items={fetchedVegetables}\r\n        itemType={formData.isVegetable}\r\n        getFunction={allVegetables}\r\n      />\r\n      <AddItemButton data={formData} getFunction={allVegetables} />\r\n    </AdminLayout>\r\n  );\r\n}\r\n\r\nexport default Vegetables;\r\n","import React from \"react\";\r\nimport { Container, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classes from \"./UserNavigation.module.css\";\r\nimport { Button } from \"@mui/material\";\r\nimport navLogo from \"../../images/navLogo.png\";\r\n\r\nfunction UserNavigation() {\r\n  let userName = localStorage.getItem(\"user_name\");\r\n  const logoStyle = { maxHeight: \"60px\" };\r\n\r\n  return (\r\n    <Navbar collapseOnSelect variant=\"dark\" expand=\"lg\" className=\"nav-bg\">\r\n      <Container>\r\n        <Navbar.Brand href=\"\" className={classes.NavBrand}>\r\n        <img src={navLogo} alt=\"logo\" style={logoStyle} />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <Link to=\"/home\" className={classes.navList}>\r\n              Home\r\n            </Link>\r\n            <Link to=\"/adoptions\" className={classes.navList}>\r\n              Adoptions\r\n            </Link>\r\n            <Link to=\"/orders\" className={classes.navList}>\r\n              Orders\r\n            </Link>\r\n          </Nav>\r\n          <NavDropdown title={userName} id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item href=\"#action/3.1\">\r\n              <Button color=\"error\" fullWidth={true} size=\"small\">\r\n                Logout\r\n              </Button>\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default UserNavigation;\r\n","import { Grid } from \"@mui/material\";\r\nimport UserNavigation from \"./UserNavigation\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nfunction UserLayout(props) {\r\n  return (\r\n    <section>\r\n      <UserNavigation />\r\n      <Grid container style={{padding: \"0px\"}}>\r\n        <Container>{props.children}</Container>\r\n      </Grid>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default UserLayout;","import {\r\n  Card,\r\n  CardActionArea,\r\n  CardHeader,\r\n  CardMedia,\r\n  Grid,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { generatePath, useHistory } from \"react-router\";\r\n\r\n\r\nfunction FarmCard(props) {\r\n  const history = useHistory();\r\n  function renderFarm() {\r\n    const farmId=props.id;\r\n    // generatePath dynamically adds the id to the URL\r\n    history.push(generatePath(\"/farm/:farmId\",{farmId}));\r\n  }\r\n  return (\r\n    <Grid item xs={12} sm={6} lg={4}>\r\n      <Card elevation={7}>\r\n        <CardActionArea key={props.id} onClick={renderFarm}>\r\n          <CardMedia component=\"img\" image={props.image} alt={props.farm_name} />\r\n          <CardHeader\r\n            title={props.farm_name}\r\n            subheader={props.owner}\r\n            action={\r\n              <Typography style={{ paddingTop: \"34px\" }}>Tannourine</Typography>\r\n            }\r\n          ></CardHeader>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default FarmCard;\r\n","import { Grid } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport FarmCard from \"./FarmCard\";\r\n\r\nfunction FarmList(props) {\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {props.farms.map((farm) => (\r\n        <FarmCard\r\n          key={farm.id}\r\n          id={farm.id}\r\n          image={farm.image}\r\n          description={farm.description}\r\n          farm_name={farm.farm_name}\r\n          location={farm.location}\r\n          owner={farm.first_name + \" \" + farm.last_name}\r\n        />\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default FarmList;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserLayout from \"../../components/layout/user-layout/UserLayout\";\r\nimport FarmList from \"../../components/user-components/farms/FarmList\";\r\nimport api from \"../../service/api\";\r\n\r\nfunction Home() {\r\n  const [fetchedFarms, setFetchedFarms] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const allFarms = () => {\r\n    api\r\n      .getCustomerFarms()\r\n      .then((response) => {\r\n        setFetchedFarms(response.data);\r\n      })\r\n      .catch((error) => {\r\n        history.push(\"/\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    allFarms();\r\n  }, [history]);\r\n\r\n  return (\r\n    <UserLayout>\r\n      <FarmList farms={fetchedFarms} />\r\n    </UserLayout>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Avatar, Button, Grid } from \"@mui/material\";\r\nimport api from \"../../../service/api\";\r\n\r\nfunction TreeCard(props) {\r\n\r\n    function handleAdoption() {\r\n      const treeAdoptionData = {\r\n        tree_id: props.id,\r\n      };\r\n  \r\n      api\r\n        .adoptTree(treeAdoptionData, {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"content-type\": \"application/json\",\r\n          },\r\n        })\r\n        .then((response) => {\r\n          if (response.data.status) {\r\n            alert(\"Tree was successfully adopted\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n  return (\r\n    <Grid item xs={12} sm={6} lg={4}>\r\n      <Card elevation={7}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"194\"\r\n          image={props.image}\r\n          alt={props.name}\r\n        />\r\n        <CardHeader\r\n          title={props.name}\r\n          subheader={\"$\" + props.price}\r\n          action={\r\n            <Avatar sx={{ bgcolor: \"#F2AB50\" }} aria-label=\"recipe\">\r\n              <Typography>{props.quantity}</Typography>\r\n            </Avatar>\r\n          }\r\n        ></CardHeader>\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {props.description}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            color=\"success\"\r\n            variant=\"contained\"\r\n            disableRipple={false}\r\n            size=\"medium\"\r\n            fullWidth={true}\r\n            sx={{ bgcolor: \"#72B750\" }}\r\n            onClick={handleAdoption}\r\n          >\r\n            Adopt Tree\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default TreeCard;\r\n","import React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Avatar, Button, Grid } from \"@mui/material\";\r\nimport api from \"../../../service/api\";\r\n\r\nfunction VegetableCard(props) {\r\n\r\n  function handleOrder() {\r\n    const vegetableOrderData = {\r\n      vegetable_id: props.id,\r\n    };\r\n\r\n    api\r\n      .orderVegetable(vegetableOrderData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.status) {\r\n          alert(\"Vegetable was successfully ordered\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12} sm={6} lg={4}>\r\n      <Card elevation={7}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"194\"\r\n          image={props.image}\r\n          alt={props.name}\r\n        />\r\n        <CardHeader\r\n          title={props.name}\r\n          subheader={\"$\" + props.price}\r\n          action={\r\n            <Avatar sx={{ bgcolor: \"#F2AB50\" }} aria-label=\"recipe\">\r\n              <Typography>{props.quantity}</Typography>\r\n            </Avatar>\r\n          }\r\n        ></CardHeader>\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {props.description}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            color=\"success\"\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            fullWidth={true}\r\n            sx={{ bgcolor: \"#72B750\" }}\r\n            onClick={handleOrder}\r\n          >\r\n            Order Box\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default VegetableCard;\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Grid } from \"@mui/material\";\r\nimport TreeCard from \"../trees/TreeCard\";\r\nimport VegetableCard from \"../vegetables/VegetableCard\";\r\nimport api from \"../../../service/api\";\r\n\r\n//TabPanel configuration\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography component={\"div\"}>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\n//component function\r\nfunction FarmProducts(props) {\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  //obtaining farm trees\r\n  const [fetchedTrees, setFetchedTrees] = useState([]);\r\n  const history = useHistory();\r\n  const treeData = {\r\n    owner_id: props.farmId,\r\n  };\r\n\r\n  const allTrees = () => {\r\n    api\r\n      .getCustomerTrees(treeData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setFetchedTrees(response.data);\r\n      })\r\n      .catch((error) => {\r\n        history.push(\"/\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    allTrees();\r\n  }, [history]);\r\n\r\n  // //obtaining farm vegetables\r\n  const [fetchedVegetables, setFetchedVegetables] = useState([]);\r\n  const vegetableData = {\r\n    owner_id: props.farmId,\r\n  };\r\n\r\n  const allVegetables = () => {\r\n    api\r\n      .getCustomerVegetables(vegetableData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setFetchedVegetables(response.data);\r\n      })\r\n      .catch((error) => {\r\n        history.push(\"/\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    allVegetables();\r\n  }, [history]);\r\n\r\n  return (\r\n    <Box sx={{ bgcolor: \"background.black\", width: \"100%\" }}>\r\n      <AppBar position=\"sticky\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          textColor=\"inherit\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tab\"\r\n        >\r\n          <Tab label=\"Adopt Trees\" {...a11yProps(0)} />\r\n          <Tab label=\"Shop Vegetables\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      <SwipeableViews\r\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          <Grid container spacing={3}>\r\n            {fetchedTrees.map((tree) => (\r\n              <TreeCard\r\n                key={tree.id}\r\n                id={tree.id}\r\n                image={tree.image}\r\n                description={tree.description}\r\n                price={tree.price}\r\n                quantity={tree.quantity}\r\n                name={tree.name}\r\n              />\r\n            ))}\r\n          </Grid>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          <Grid container spacing={3}>\r\n            {fetchedVegetables.map((vegetable) => (\r\n              <VegetableCard\r\n                key={vegetable.id}\r\n                id={vegetable.id}\r\n                image={vegetable.image}\r\n                description={vegetable.description}\r\n                price={vegetable.price}\r\n                quantity={vegetable.quantity}\r\n                name={vegetable.name}\r\n              />\r\n            ))}\r\n          </Grid>\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default FarmProducts;\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Grid,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport classes from \"./FarmProfile.module.css\";\r\n\r\nfunction FarmProfile(props) {\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Card className={classes.profileCard}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"194\"\r\n          image={props.data.image}\r\n          alt={props.data.farm_name}\r\n        />\r\n        <CardHeader\r\n          title={<Typography variant=\"h3\">{props.data.farm_name}</Typography>}\r\n          subheader={props.data.first_name + \" \" + props.data.last_name}\r\n          action={\r\n            <Typography style={{ paddingTop: \"25px\" }}>Tannourine</Typography>\r\n          }\r\n        ></CardHeader>\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {props.data.description}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default FarmProfile;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserLayout from \"../../components/layout/user-layout/UserLayout\";\r\nimport FarmProducts from \"../../components/user-components/farms/FarmProducts\";\r\nimport FarmProfile from \"../../components/user-components/farms/FarmProfile\";\r\nimport api from \"../../service/api\";\r\n\r\nfunction Farm() {\r\n  const [fetchedFarms, setFetchedFarms] = useState([]);\r\n  const history = useHistory();\r\n\r\n  //obtaining farms data\r\n  const allFarms = () => {\r\n    api\r\n      .getCustomerFarms()\r\n      .then((response) => {\r\n        setFetchedFarms(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        history.push(\"/\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    allFarms();\r\n  }, [history]);\r\n\r\n  //farm id is sent in the url onClick on a specific farm card\r\n  let { farmId } = useParams();\r\n  const id = parseInt(farmId);\r\n  let farmData = [];\r\n\r\n  //filtering the farms based on the id.\r\n  //this could have also been done on the server side\r\n  for (let farm of fetchedFarms) {\r\n    if (farm.id === id) {\r\n      farmData = farm;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <UserLayout>\r\n      <FarmProfile data={farmData} />\r\n      <FarmProducts farmId={id} />\r\n    </UserLayout>\r\n  );\r\n}\r\n\r\nexport default Farm;\r\n","export default __webpack_public_path__ + \"static/media/loginLogo.bba5023c.png\";","import * as React from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Grid, Paper, TextField, Button } from \"@mui/material\";\r\nimport loginLogo from \"./images/loginLogo.png\";\r\nimport api from \"../service/api\";\r\n\r\nfunction Login() {\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n  const history = useHistory();\r\n\r\n  function loginHandler(event) {\r\n    event.preventDefault();\r\n    const enteredEmail = emailInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n    const loginData = {\r\n      email: enteredEmail,\r\n      password: enteredPassword,\r\n    };\r\n\r\n    api\r\n      .checkLogin(loginData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const fname = response.data.user.first_name;\r\n        const lname = response.data.user.last_name;\r\n        const fullName = fname + \" \" + lname;\r\n        \r\n        if (response.data.user.user_type_id === 1) {\r\n          localStorage.setItem(\"user_name\", fullName);\r\n          localStorage.setItem(\"access_token\", response.data.access_token);\r\n          localStorage.setItem(\"user_type\", response.data.user.user_type_id);\r\n          history.push(\"/profile\");\r\n        } else {\r\n          localStorage.setItem(\"user_name\", fullName);\r\n          localStorage.setItem(\"access_token\", response.data.access_token);\r\n          localStorage.setItem(\"user_type\", response.data.user.user_type_id);\r\n          history.push(\"/home\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        if (enteredEmail === \"\" || enteredPassword === \"\") {\r\n          alert(\"Please Enter your information\");\r\n        } else {\r\n          alert(\"incorrect email or password\");\r\n        }\r\n      });\r\n  }\r\n\r\n  const headerStyle = { marginTop: 10, color: \"#72B750\" };\r\n  const paperStyle = {\r\n    padding: 20,\r\n    height: \"70vh\",\r\n    maxWidth: 380,\r\n  };\r\n  const logoStyle = { maxHeight: \"100px\", marginTop: \"-25px\" };\r\n  const brandStyle = { color: \"#516C66\" };\r\n\r\n  return (\r\n    <Paper elevation={10} style={paperStyle}>\r\n      <Grid align=\"center\">\r\n        <img src={loginLogo} alt=\"logo\" style={logoStyle} />\r\n        <h3 style={brandStyle}>Efarm</h3>\r\n        <h2 style={headerStyle}>Sign in</h2>\r\n      </Grid>\r\n      <form onSubmit={loginHandler}>\r\n        <TextField\r\n          sx={{ paddingBottom: \"10px\" }}\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          placeholder=\"Enter email address\"\r\n          inputRef={emailInputRef}\r\n          variant=\"standard\"\r\n          color=\"success\"\r\n          size=\"small\"\r\n          fullWidth\r\n          required\r\n        />\r\n        <TextField\r\n          sx={{ paddingBottom: \"15px\" }}\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          placeholder=\"Enter password\"\r\n          inputRef={passwordInputRef}\r\n          variant=\"standard\"\r\n          color=\"success\"\r\n          size=\"small\"\r\n          fullWidth\r\n          required\r\n        />\r\n        <Button\r\n          color=\"success\"\r\n          sx={{ backgroundColor: \"#72b750\", margin: \"10px 0px\" }}\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          fullWidth\r\n        >\r\n          Sign in\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import * as React from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { Button, Grid, Paper, TextField } from \"@mui/material\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport loginLogo from \"./images/loginLogo.png\";\r\nimport api from \"../service/api\";\r\n\r\nfunction Signup() {\r\n  const firstNameInputRef = useRef();\r\n  const lastNameInputRef = useRef();\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n\r\n  function signupHandler(event) {\r\n    event.preventDefault();\r\n    const enteredFirstName = firstNameInputRef.current.value;\r\n    const enteredLastName = lastNameInputRef.current.value;\r\n    const enteredEmail = emailInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n    const signupData = {\r\n      first_name: enteredFirstName,\r\n      last_name: enteredLastName,\r\n      user_type_id: value,\r\n      email: enteredEmail,\r\n      password: enteredPassword,\r\n    };\r\n\r\n    api\r\n      .checkSignup(signupData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.status) {\r\n          alert(\"Account is successfully created\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        if (enteredEmail === \"\" || enteredPassword === \"\") {\r\n          alert(\"Please Enter your information\");\r\n        } else {\r\n          alert(\"Email exists already\");\r\n        }\r\n      });\r\n  }\r\n\r\n  const headerStyle = { marginTop: 10, color: \"#72B750\" };\r\n  const paperStyle = {\r\n    padding: 20,\r\n    maxWidth: 380,\r\n  };\r\n  const logoStyle = { maxHeight: \"100px\", marginTop: \"-25px\" };\r\n  const brandStyle = { color: \"#516C66\" };\r\n\r\n  const [value, setValue] = React.useState(\"0\");\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n  return (\r\n    <Paper elevation={20} style={paperStyle}>\r\n      <Grid align=\"center\">\r\n        <img src={loginLogo} alt=\"logo\" style={logoStyle} />\r\n        <h3 style={brandStyle}>Efarm</h3>\r\n        <h2 style={headerStyle}>Sign Up</h2>\r\n      </Grid>\r\n      <form onSubmit={signupHandler}>\r\n        <TextField\r\n          sx={{ paddingBottom: \"10px\" }}\r\n          label=\"First Name\"\r\n          type=\"text\"\r\n          placeholder=\"Enter your first name\"\r\n          inputRef={firstNameInputRef}\r\n          variant=\"standard\"\r\n          color=\"success\"\r\n          size=\"small\"\r\n          fullWidth\r\n          required\r\n        />\r\n        <TextField\r\n          sx={{ paddingBottom: \"10px\" }}\r\n          label=\"Last Name\"\r\n          type=\"text\"\r\n          placeholder=\"Enter your last name\"\r\n          inputRef={lastNameInputRef}\r\n          variant=\"standard\"\r\n          color=\"success\"\r\n          size=\"small\"\r\n          fullWidth\r\n          required\r\n        />\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel\r\n            color=\"success\"\r\n            component=\"legend\"\r\n            style={{ margin: \"0px\" }}\r\n          >\r\n            Register as:\r\n          </FormLabel>\r\n          <RadioGroup\r\n            style={{ display: \"initial\" }}\r\n            aria-label=\"user type\"\r\n            defaultValue=\"Customer\"\r\n            name=\"user-type\"\r\n            value={value}\r\n            onChange={handleChange}\r\n          >\r\n            <FormControlLabel\r\n              value=\"0\" // 0 for customers\r\n              control={<Radio color=\"success\" size=\"small\" />}\r\n              label=\"Customer\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"1\" // 1 for farmers\r\n              control={<Radio color=\"success\" size=\"small\" />}\r\n              label=\"Farmer\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n        <TextField\r\n          sx={{ paddingBottom: \"10px\" }}\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          placeholder=\"Enter your email\"\r\n          inputRef={emailInputRef}\r\n          variant=\"standard\"\r\n          color=\"success\"\r\n          size=\"small\"\r\n          fullWidth\r\n          required\r\n        />\r\n        <TextField\r\n          sx={{ paddingBottom: \"10px\" }}\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          placeholder=\"Create a password\"\r\n          inputRef={passwordInputRef}\r\n          variant=\"standard\"\r\n          color=\"success\"\r\n          size=\"small\"\r\n          fullWidth\r\n          required\r\n        />\r\n        <Button\r\n          color=\"success\"\r\n          sx={{ backgroundColor: \"#72b750\", margin: \"10px 0px\" }}\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          fullWidth\r\n        >\r\n          Sign Up\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Login from \"../components/Login\";\r\nimport Signup from \"../components/Signup\";\r\nimport { Paper } from \"@mui/material\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n     {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction RegistrationForm() {\r\n  const paperStyle = { maxWidth: 380, margin: \"6vh auto\" };\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  return (\r\n    <Paper style={paperStyle} elevation={7}>\r\n      <Box sx={{ bgcolor: \"background.paper\", maxWidth: 380 }}>\r\n        <AppBar position=\"static\">\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor=\"secondary\"\r\n            textColor=\"inherit\"\r\n            variant=\"fullWidth\"\r\n            aria-label=\"full width tabs example\"\r\n          >\r\n            <Tab label=\"Sign In\" {...a11yProps(0)} />\r\n            <Tab label=\"Sign Up\" {...a11yProps(1)} />\r\n          </Tabs>\r\n        </AppBar>\r\n        <SwipeableViews\r\n          axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n          index={value}\r\n          onChangeIndex={handleChangeIndex}\r\n        >\r\n          <TabPanel value={value} index={0} dir={theme.direction}>\r\n            <Login />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1} dir={theme.direction}>\r\n            <Signup/>\r\n          </TabPanel>\r\n        </SwipeableViews>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default RegistrationForm;\r\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Avatar, CardHeader, Grid } from \"@mui/material\";\r\n\r\nfunction UserItemsList(props) {\r\n  return (\r\n    <Grid container sx={{ marginTop: \"-25px\" }}>\r\n      {props.items.map((item) => (\r\n        <Grid key={item.id} item xs={12}>\r\n          <Card sx={{ display: \"flex\" }} elevation={7}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              sx={{ width: \"35%\" }}\r\n              image={item.image}\r\n              alt=\"Live from space album cover\"\r\n            />\r\n            <Box\r\n              sx={{ width: \"65%\", display: \"flex\", flexDirection: \"column\" }}\r\n            >\r\n              <CardHeader\r\n                sx={{ backgroundColor: \"#ffffff\" }}\r\n                title={item.name}\r\n                subheader={\"$\" + item.price}\r\n                action={\r\n                  <Avatar\r\n                    sx={{ bgcolor: \"#F2AB50\", marginTop: \"70%\" }}\r\n                    aria-label=\"recipe\"\r\n                  >\r\n                    <Typography>{item.quantity}</Typography>\r\n                  </Avatar>\r\n                }\r\n              ></CardHeader>\r\n              <CardContent\r\n                sx={{ flex: \"1 0 auto\", backgroundColor: \"#ffffff\" }}\r\n              >\r\n                <Typography\r\n                  component=\"div\"\r\n                  style={{ color: \"#516c66\" }}\r\n                  variant=\"h6\"\r\n                >\r\n                  {item.farm_name}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  color=\"text.secondary\"\r\n                  component=\"div\"\r\n                >\r\n                  {item.description}\r\n                </Typography>\r\n              </CardContent>\r\n            </Box>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n      ;\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default UserItemsList;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserLayout from \"../../components/layout/user-layout/UserLayout\";\r\nimport UserItemsList from \"../../components/ui/UserItemsList\";\r\nimport api from \"../../service/api\";\r\n\r\nfunction Orders() {\r\n  const [fetchedOrders, setFetchedOrders] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const allOrders = () => {\r\n    api\r\n      .getCustomerOrders()\r\n      .then((response) => {\r\n        setFetchedOrders(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        history.push(\"/\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    allOrders();\r\n  }, [history]);\r\n\r\n  return (\r\n    <UserLayout>\r\n      <UserItemsList items={fetchedOrders} />\r\n    </UserLayout>\r\n  );\r\n}\r\n\r\nexport default Orders;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserLayout from \"../../components/layout/user-layout/UserLayout\";\r\nimport UserItemsList from \"../../components/ui/UserItemsList\";\r\nimport api from \"../../service/api\";\r\n\r\nfunction Adoptions() {\r\n  const [fetchedAdoptions, setFetchedAdoptions] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const allAdoptions = () => {\r\n    api\r\n      .getCustomerAdoptions()\r\n      .then((response) => {\r\n        setFetchedAdoptions(response.data);\r\n      })\r\n      .catch((error) => {\r\n        history.push(\"/\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    allAdoptions();\r\n  }, [history]);\r\n\r\n  return (\r\n    <UserLayout>\r\n      <UserItemsList items={fetchedAdoptions} />\r\n    </UserLayout>\r\n  );\r\n}\r\n\r\nexport default Adoptions;\r\n","import React from 'react';\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nfunction ProtectedFarmerRoute({ component: Component, ...restOfProps }) {\r\n    const userType = localStorage.getItem(\"user_type\");\r\n    return (\r\n        <Route\r\n      {...restOfProps}\r\n      render={(props) =>\r\n        userType === '1' ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n    );\r\n}\r\n\r\nexport default ProtectedFarmerRoute;","import React from 'react';\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nfunction ProtectedCustomerRoute({ component: Component, ...restOfProps }) {\r\n    const userType = localStorage.getItem(\"user_type\");\r\n    return (\r\n        <Route\r\n      {...restOfProps}\r\n      render={(props) =>\r\n        userType === '0' ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n    );\r\n}\r\n\r\nexport default ProtectedCustomerRoute;","import { HashRouter, Route } from \"react-router-dom\";\nimport Dashboard from \"./pages/admin-pages/Dashboard\";\nimport Profile from \"./pages/admin-pages/Profile\";\nimport Trees from \"./pages/admin-pages/Trees\";\nimport Vegetables from \"./pages/admin-pages/Vegetables\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Home from \"./pages/user-pages/Home\";\nimport Farm from \"./pages/user-pages/Farm\";\nimport RegistrationForm from \"./pages/RegistrationForm\";\nimport Orders from \"./pages/user-pages/Orders\";\nimport Adoptions from \"./pages/user-pages/Adoptions\";\nimport ProtectedFarmerRoute from \"./components/protected-routes/ProtectedCustomerRoute\";\nimport ProtectedCustomerRoute from \"./components/protected-routes/ProtectedFarmerRoute\";\n\nfunction App() {\n  return (\n    // HashRouter is used to solve error 404 caused by Github Pages not supporting Single page apps\n    <HashRouter>\n      <Route path=\"/\" exact component={RegistrationForm} />\n\n      <ProtectedFarmerRoute path=\"/profile\" component={Profile} />\n      <ProtectedFarmerRoute path=\"/dashboard\" component={Dashboard} />\n      <ProtectedFarmerRoute path=\"/vegetables\" component={Vegetables} />\n      <ProtectedFarmerRoute path=\"/trees\" component={Trees} />\n      <ProtectedCustomerRoute path=\"/home\" component={Home} />\n      <ProtectedCustomerRoute path=\"/farm/:farmId\" component={Farm} />\n      {/* <Route path=\"/farm/:farmId\">\n        <Farm />\n      </Route> */}\n      <ProtectedCustomerRoute path=\"/orders\" component={Orders} />\n      <ProtectedCustomerRoute path=\"/adoptions\" component={Adoptions} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/efarm\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"AddItemForm_actions__27gYe\",\"control\":\"AddItemForm_control__1PH2q\",\"form\":\"AddItemForm_form__2paK7\",\"formTitle\":\"AddItemForm_formTitle__1anUS\",\"formContainer\":\"AddItemForm_formContainer__xDTdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"EditProfileForm_actions__FRjVb\",\"control\":\"EditProfileForm_control__2e7fW\",\"form\":\"EditProfileForm_form__13Giy\",\"formTitle\":\"EditProfileForm_formTitle__3EPoB\",\"formContainer\":\"EditProfileForm_formContainer__n7f2g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoutLink\":\"AdminNavigation_logoutLink__En7Fw\",\"navList\":\"AdminNavigation_navList__1ryNN\",\"active\":\"AdminNavigation_active__2TV8j\",\"NavBrand\":\"AdminNavigation_NavBrand___PmO8\",\"profileLink\":\"AdminNavigation_profileLink__2fQrw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navList\":\"UserNavigation_navList__3pzkG\",\"active\":\"UserNavigation_active__2zZ_o\",\"NavBrand\":\"UserNavigation_NavBrand__1WNjX\"};"],"sourceRoot":""}